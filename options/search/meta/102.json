[{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Container name: required for volumes, optional for env vars</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.downwardAPI.items.*.resourceFieldRef.containerName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specifies the output format of the exposed resources, defaults to &quot;1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.downwardAPI.items.*.resourceFieldRef.divisor"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Required: resource to select</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.downwardAPI.items.*.resourceFieldRef.resource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>secret information about the secret data to project</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.secret"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.secret.items"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the key to project.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.secret.items.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.secret.items.*.mode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.secret.items.*.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.secret.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>optional field specify whether the Secret or its key must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.secret.optional"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>serviceAccountToken is information about the serviceAccountToken data to project</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.serviceAccountToken"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.serviceAccountToken.audience"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.serviceAccountToken.expirationSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>path is the path relative to the mount point of the file to project the token into.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.projected.sources.*.serviceAccountToken.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>quobyte represents a Quobyte mount on the host that shares a pod's lifetime. Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.quobyte"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>group to map volume access to Default is no group</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.quobyte.group"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.quobyte.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.quobyte.registry"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.quobyte.tenant"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>user to map volume access to Defaults to serivceaccount user</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.quobyte.user"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volume is a string that references an already created Quobyte volume by name.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.quobyte.volume"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported. More info: https://examples.k8s.io/volumes/rbd/README.md</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.rbd"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: &quot;ext4&quot;, &quot;xfs&quot;, &quot;ntfs&quot;. Implicitly inferred to be &quot;ext4&quot; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.rbd.fsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.rbd.image"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.rbd.keyring"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"list of (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.rbd.monitors"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.rbd.pool"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.rbd.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.rbd.secretRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.rbd.secretRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.rbd.user"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes. Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.scaleIO"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;, &quot;ntfs&quot;. Default is &quot;xfs&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.scaleIO.fsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>gateway is the host address of the ScaleIO API Gateway.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.scaleIO.gateway"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.scaleIO.protectionDomain"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.scaleIO.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.scaleIO.secretRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.scaleIO.secretRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>sslEnabled Flag enable/disable SSL communication with Gateway, default false</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.scaleIO.sslEnabled"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.scaleIO.storageMode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storagePool is the ScaleIO Storage Pool associated with the protection domain.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.scaleIO.storagePool"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>system is the name of the storage system as configured in ScaleIO.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.scaleIO.system"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.scaleIO.volumeName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.secret"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.secret.defaultMode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.secret.items"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the key to project.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.secret.items.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.secret.items.*.mode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.secret.items.*.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>optional field specify whether the Secret or its keys must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.secret.optional"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.secret.secretName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes. Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.storageos"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;, &quot;ntfs&quot;. Implicitly inferred to be &quot;ext4&quot; if unspecified.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.storageos.fsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.storageos.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.storageos.secretRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.storageos.secretRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.storageos.volumeName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to &quot;default&quot; if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.storageos.volumeNamespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine. Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type are redirected to the csi.vsphere.vmware.com CSI driver.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.vsphereVolume"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;, &quot;ntfs&quot;. Implicitly inferred to be &quot;ext4&quot; if unspecified.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.vsphereVolume.fsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.vsphereVolume.storagePolicyID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storagePolicyName is the storage Policy Based Management (SPBM) profile name.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.vsphereVolume.storagePolicyName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumePath is the path that identifies vSphere volume vmdk</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.spec.volumes.<name>.vsphereVolume.volumePath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.conditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.conditions.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Last time we probed the condition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.conditions.<name>.lastProbeTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Last time the condition transitioned from one status to another.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.conditions.<name>.lastTransitionTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Human-readable message indicating details about last transition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.conditions.<name>.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If set, this represents the .metadata.generation that the pod condition was set based upon. This is an alpha field. Enable PodObservedGenerationTracking to be able to use this field.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.conditions.<name>.observedGeneration"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Unique, one-word, CamelCase reason for the condition's last transition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.conditions.<name>.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.conditions.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.conditions.<name>.type"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Statuses of containers in this pod. Each container in the pod should have at most one status in this list, and all statuses should be for containers in the pod. However this is not enforced. If a status for a non-existent container is present in the list, or the list has duplicate names, the behavior of various Kubernetes components is not defined and those statuses might be ignored. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>AllocatedResources represents the compute resources allocated for this container by the node. Kubelet sets this value to Container.Resources.Requests upon successful pod admission and after successfully admitting desired pod resize.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.allocatedResources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>AllocatedResourcesStatus represents the status of various resources allocated for this Pod.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.allocatedResourcesStatus"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.allocatedResourcesStatus.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the resource. Must be unique within the pod and in case of non-DRA resource, match one of the resources from the pod spec. For DRA resources, the value must be &quot;claim:&lt;claim_name&gt;/&lt;request&gt;&quot;. When this status is reported about a container, the &quot;claim_name&quot; and &quot;request&quot; must match one of the claims of this container.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.allocatedResourcesStatus.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of unique resources health. Each element in the list contains an unique resource ID and its health. At a minimum, for the lifetime of a Pod, resource ID must uniquely identify the resource allocated to the Pod on the Node. If other Pod on the same Node reports the status with the same resource ID, it must be the same resource they share. See ResourceID type definition for a specific format it has in various use cases.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.allocatedResourcesStatus.<name>.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Health of the resource. can be one of:</p>\n<ul>\n<li>Healthy: operates as normal</li>\n<li>Unhealthy: reported unhealthy. We consider this a temporary health issue\nsince we do not have a mechanism today to distinguish\ntemporary and permanent issues.</li>\n<li>Unknown: The status cannot be determined.\nFor example, Device Plugin got unregistered and hasn't been re-registered since.</li>\n</ul>\n<p>In future we may want to introduce the PermanentlyUnhealthy Status.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.allocatedResourcesStatus.<name>.resources.*.health"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceID is the unique identifier of the resource. See the ResourceID type for more information.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.allocatedResourcesStatus.<name>.resources.*.resourceID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ContainerID is the ID of the container in the format '&lt;type&gt;://&lt;container_id&gt;'. Where type is a container runtime identifier, returned from Version call of CRI API (for example &quot;containerd&quot;).</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.containerID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Image is the name of container image that the container is running. The container image may not match the image used in the PodSpec, as it may have been resolved by the runtime. More info: https://kubernetes.io/docs/concepts/containers/images.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.image"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ImageID is the image ID of the container's image. The image ID may not match the image ID of the image used in the PodSpec, as it may have been resolved by the runtime.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.imageID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>LastTerminationState holds the last termination state of the container to help debug container crashes and restarts. This field is not populated if the container is still running and RestartCount is 0.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a running container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.running"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which the container was last (re-)started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.running.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a terminated container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.terminated"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Container's ID in the format '&lt;type&gt;://&lt;container_id&gt;'</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.terminated.containerID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Exit status from the last termination of the container</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.terminated.exitCode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which the container last terminated</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.terminated.finishedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message regarding the last termination of the container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.terminated.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason from the last termination of the container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.terminated.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Signal from the last termination of the container</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.terminated.signal"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which previous execution of the container started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.terminated.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a waiting container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.waiting"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message regarding why the container is not yet running.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.waiting.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason the container is not yet running.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.lastState.waiting.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is a DNS_LABEL representing the unique name of the container. Each container in a pod must have a unique name across all container types. Cannot be updated.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Ready specifies whether the container is currently passing its readiness check. The value will change as readiness probes keep executing. If no readiness probes are specified, this field defaults to true once the container is fully started (see Started field).</p>\n<p>The value is typically used to determine whether a container is ready to accept traffic.</p>","example":null,"read_only":false,"type":"boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.ready"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Resources represents the compute resource requests and limits that have been successfully enacted on the running container after it has been started or has been successfully resized.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.</p>\n<p>This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.</p>\n<p>This field is immutable. It can only be set for containers.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.resources.claims"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.resources.claims.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.resources.claims.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Request is the name chosen for a request in the referenced claim. If empty, everything from the claim is made available, otherwise only the result of this request.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.resources.claims.<name>.request"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.resources.limits"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.resources.requests"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>RestartCount holds the number of times the container has been restarted. Kubelet makes an effort to always increment the value, but there are cases when the state may be lost due to node restarts and then the value may be reset to 0. The value is never negative.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.restartCount"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Started indicates whether the container has finished its postStart lifecycle hook and passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. In both cases, startup probes will run again. Is always true when no startupProbe is defined and container is running and has passed the postStart lifecycle hook. The null value must be treated the same as false.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.started"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>State holds details about the container's current condition.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a running container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.running"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which the container was last (re-)started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.running.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a terminated container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.terminated"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Container's ID in the format '&lt;type&gt;://&lt;container_id&gt;'</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.terminated.containerID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Exit status from the last termination of the container</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.terminated.exitCode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which the container last terminated</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.terminated.finishedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message regarding the last termination of the container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.terminated.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason from the last termination of the container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.terminated.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Signal from the last termination of the container</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.terminated.signal"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which previous execution of the container started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.terminated.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a waiting container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.waiting"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message regarding why the container is not yet running.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.waiting.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason the container is not yet running.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.state.waiting.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>StopSignal reports the effective stop signal for this container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.stopSignal"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>User represents user identity information initially attached to the first process of the container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.user"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Linux holds user identity information initially attached to the first process of the containers in Linux. Note that the actual running identity can be changed if the process has enough privilege to do so.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.user.linux"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GID is the primary gid initially attached to the first process in the container</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.user.linux.gid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>SupplementalGroups are the supplemental groups initially attached to the first process in the container</p>","example":null,"read_only":false,"type":"null or (list of signed integer)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.user.linux.supplementalGroups"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the primary uid initially attached to the first process in the container</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.user.linux.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Status of volume mounts.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.volumeMounts"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.volumeMounts.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MountPath corresponds to the original VolumeMount.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.volumeMounts.<name>.mountPath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name corresponds to the name of the original VolumeMount.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.volumeMounts.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ReadOnly corresponds to the original VolumeMount.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.volumeMounts.<name>.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>RecursiveReadOnly must be set to Disabled, Enabled, or unspecified (for non-readonly mounts). An IfPossible value in the original VolumeMount must be translated to Disabled or Enabled, depending on the mount result.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.containerStatuses.<name>.volumeMounts.<name>.recursiveReadOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Statuses for any ephemeral containers that have run in this pod. Each ephemeral container in the pod should have at most one status in this list, and all statuses should be for containers in the pod. However this is not enforced. If a status for a non-existent container is present in the list, or the list has duplicate names, the behavior of various Kubernetes components is not defined and those statuses might be ignored. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>AllocatedResources represents the compute resources allocated for this container by the node. Kubelet sets this value to Container.Resources.Requests upon successful pod admission and after successfully admitting desired pod resize.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.allocatedResources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>AllocatedResourcesStatus represents the status of various resources allocated for this Pod.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.allocatedResourcesStatus"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.allocatedResourcesStatus.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the resource. Must be unique within the pod and in case of non-DRA resource, match one of the resources from the pod spec. For DRA resources, the value must be &quot;claim:&lt;claim_name&gt;/&lt;request&gt;&quot;. When this status is reported about a container, the &quot;claim_name&quot; and &quot;request&quot; must match one of the claims of this container.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.allocatedResourcesStatus.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of unique resources health. Each element in the list contains an unique resource ID and its health. At a minimum, for the lifetime of a Pod, resource ID must uniquely identify the resource allocated to the Pod on the Node. If other Pod on the same Node reports the status with the same resource ID, it must be the same resource they share. See ResourceID type definition for a specific format it has in various use cases.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.allocatedResourcesStatus.<name>.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Health of the resource. can be one of:</p>\n<ul>\n<li>Healthy: operates as normal</li>\n<li>Unhealthy: reported unhealthy. We consider this a temporary health issue\nsince we do not have a mechanism today to distinguish\ntemporary and permanent issues.</li>\n<li>Unknown: The status cannot be determined.\nFor example, Device Plugin got unregistered and hasn't been re-registered since.</li>\n</ul>\n<p>In future we may want to introduce the PermanentlyUnhealthy Status.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.allocatedResourcesStatus.<name>.resources.*.health"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceID is the unique identifier of the resource. See the ResourceID type for more information.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.allocatedResourcesStatus.<name>.resources.*.resourceID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ContainerID is the ID of the container in the format '&lt;type&gt;://&lt;container_id&gt;'. Where type is a container runtime identifier, returned from Version call of CRI API (for example &quot;containerd&quot;).</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.containerID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Image is the name of container image that the container is running. The container image may not match the image used in the PodSpec, as it may have been resolved by the runtime. More info: https://kubernetes.io/docs/concepts/containers/images.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.image"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ImageID is the image ID of the container's image. The image ID may not match the image ID of the image used in the PodSpec, as it may have been resolved by the runtime.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.imageID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>LastTerminationState holds the last termination state of the container to help debug container crashes and restarts. This field is not populated if the container is still running and RestartCount is 0.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a running container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.running"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which the container was last (re-)started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.running.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a terminated container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.terminated"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Container's ID in the format '&lt;type&gt;://&lt;container_id&gt;'</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.terminated.containerID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Exit status from the last termination of the container</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.terminated.exitCode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which the container last terminated</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.terminated.finishedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message regarding the last termination of the container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.terminated.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason from the last termination of the container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.terminated.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Signal from the last termination of the container</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.terminated.signal"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which previous execution of the container started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.terminated.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a waiting container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.waiting"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message regarding why the container is not yet running.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.waiting.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason the container is not yet running.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.lastState.waiting.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is a DNS_LABEL representing the unique name of the container. Each container in a pod must have a unique name across all container types. Cannot be updated.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Ready specifies whether the container is currently passing its readiness check. The value will change as readiness probes keep executing. If no readiness probes are specified, this field defaults to true once the container is fully started (see Started field).</p>\n<p>The value is typically used to determine whether a container is ready to accept traffic.</p>","example":null,"read_only":false,"type":"boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.ready"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Resources represents the compute resource requests and limits that have been successfully enacted on the running container after it has been started or has been successfully resized.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.</p>\n<p>This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.</p>\n<p>This field is immutable. It can only be set for containers.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.resources.claims"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.resources.claims.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.resources.claims.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Request is the name chosen for a request in the referenced claim. If empty, everything from the claim is made available, otherwise only the result of this request.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.resources.claims.<name>.request"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.resources.limits"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.resources.requests"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>RestartCount holds the number of times the container has been restarted. Kubelet makes an effort to always increment the value, but there are cases when the state may be lost due to node restarts and then the value may be reset to 0. The value is never negative.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.restartCount"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Started indicates whether the container has finished its postStart lifecycle hook and passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. In both cases, startup probes will run again. Is always true when no startupProbe is defined and container is running and has passed the postStart lifecycle hook. The null value must be treated the same as false.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.started"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>State holds details about the container's current condition.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a running container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.running"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which the container was last (re-)started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.running.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a terminated container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.terminated"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Container's ID in the format '&lt;type&gt;://&lt;container_id&gt;'</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.terminated.containerID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Exit status from the last termination of the container</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.terminated.exitCode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which the container last terminated</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.terminated.finishedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message regarding the last termination of the container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.terminated.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason from the last termination of the container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.terminated.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Signal from the last termination of the container</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.terminated.signal"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which previous execution of the container started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.terminated.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a waiting container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.waiting"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message regarding why the container is not yet running.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.waiting.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason the container is not yet running.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.state.waiting.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>StopSignal reports the effective stop signal for this container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.stopSignal"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>User represents user identity information initially attached to the first process of the container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.user"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Linux holds user identity information initially attached to the first process of the containers in Linux. Note that the actual running identity can be changed if the process has enough privilege to do so.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.user.linux"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GID is the primary gid initially attached to the first process in the container</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.user.linux.gid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>SupplementalGroups are the supplemental groups initially attached to the first process in the container</p>","example":null,"read_only":false,"type":"null or (list of signed integer)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.user.linux.supplementalGroups"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the primary uid initially attached to the first process in the container</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.user.linux.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Status of volume mounts.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.volumeMounts"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.volumeMounts.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MountPath corresponds to the original VolumeMount.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.volumeMounts.<name>.mountPath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name corresponds to the name of the original VolumeMount.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.volumeMounts.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ReadOnly corresponds to the original VolumeMount.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.volumeMounts.<name>.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>RecursiveReadOnly must be set to Disabled, Enabled, or unspecified (for non-readonly mounts). An IfPossible value in the original VolumeMount must be translated to Disabled or Enabled, depending on the mount result.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.ephemeralContainerStatuses.<name>.volumeMounts.<name>.recursiveReadOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>hostIP holds the IP address of the host to which the pod is assigned. Empty if the pod has not started yet. A pod can be assigned to a node that has a problem in kubelet which in turns mean that HostIP will not be updated even if there is a node is assigned to pod</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.hostIP"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>hostIPs holds the IP addresses allocated to the host. If this field is specified, the first entry must match the hostIP field. This list is empty if the pod has not started yet. A pod can be assigned to a node that has a problem in kubelet which in turns means that HostIPs will not be updated even if there is a node is assigned to this pod.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.hostIPs"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.hostIPs.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>IP is the IP address assigned to the host</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.hostIPs.<name>.ip"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Statuses of init containers in this pod. The most recent successful non-restartable init container will have ready = true, the most recently started container will have startTime set. Each init container in the pod should have at most one status in this list, and all statuses should be for containers in the pod. However this is not enforced. If a status for a non-existent container is present in the list, or the list has duplicate names, the behavior of various Kubernetes components is not defined and those statuses might be ignored. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-and-container-status</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>AllocatedResources represents the compute resources allocated for this container by the node. Kubelet sets this value to Container.Resources.Requests upon successful pod admission and after successfully admitting desired pod resize.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.allocatedResources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>AllocatedResourcesStatus represents the status of various resources allocated for this Pod.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.allocatedResourcesStatus"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.allocatedResourcesStatus.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the resource. Must be unique within the pod and in case of non-DRA resource, match one of the resources from the pod spec. For DRA resources, the value must be &quot;claim:&lt;claim_name&gt;/&lt;request&gt;&quot;. When this status is reported about a container, the &quot;claim_name&quot; and &quot;request&quot; must match one of the claims of this container.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.allocatedResourcesStatus.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of unique resources health. Each element in the list contains an unique resource ID and its health. At a minimum, for the lifetime of a Pod, resource ID must uniquely identify the resource allocated to the Pod on the Node. If other Pod on the same Node reports the status with the same resource ID, it must be the same resource they share. See ResourceID type definition for a specific format it has in various use cases.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.allocatedResourcesStatus.<name>.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Health of the resource. can be one of:</p>\n<ul>\n<li>Healthy: operates as normal</li>\n<li>Unhealthy: reported unhealthy. We consider this a temporary health issue\nsince we do not have a mechanism today to distinguish\ntemporary and permanent issues.</li>\n<li>Unknown: The status cannot be determined.\nFor example, Device Plugin got unregistered and hasn't been re-registered since.</li>\n</ul>\n<p>In future we may want to introduce the PermanentlyUnhealthy Status.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.allocatedResourcesStatus.<name>.resources.*.health"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceID is the unique identifier of the resource. See the ResourceID type for more information.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.allocatedResourcesStatus.<name>.resources.*.resourceID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ContainerID is the ID of the container in the format '&lt;type&gt;://&lt;container_id&gt;'. Where type is a container runtime identifier, returned from Version call of CRI API (for example &quot;containerd&quot;).</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.containerID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Image is the name of container image that the container is running. The container image may not match the image used in the PodSpec, as it may have been resolved by the runtime. More info: https://kubernetes.io/docs/concepts/containers/images.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.image"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ImageID is the image ID of the container's image. The image ID may not match the image ID of the image used in the PodSpec, as it may have been resolved by the runtime.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.imageID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>LastTerminationState holds the last termination state of the container to help debug container crashes and restarts. This field is not populated if the container is still running and RestartCount is 0.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a running container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.running"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which the container was last (re-)started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.running.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a terminated container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.terminated"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Container's ID in the format '&lt;type&gt;://&lt;container_id&gt;'</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.terminated.containerID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Exit status from the last termination of the container</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.terminated.exitCode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which the container last terminated</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.terminated.finishedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message regarding the last termination of the container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.terminated.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason from the last termination of the container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.terminated.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Signal from the last termination of the container</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.terminated.signal"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which previous execution of the container started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.terminated.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a waiting container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.waiting"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message regarding why the container is not yet running.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.waiting.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason the container is not yet running.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.lastState.waiting.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is a DNS_LABEL representing the unique name of the container. Each container in a pod must have a unique name across all container types. Cannot be updated.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Ready specifies whether the container is currently passing its readiness check. The value will change as readiness probes keep executing. If no readiness probes are specified, this field defaults to true once the container is fully started (see Started field).</p>\n<p>The value is typically used to determine whether a container is ready to accept traffic.</p>","example":null,"read_only":false,"type":"boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.ready"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Resources represents the compute resource requests and limits that have been successfully enacted on the running container after it has been started or has been successfully resized.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.</p>\n<p>This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.</p>\n<p>This field is immutable. It can only be set for containers.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.resources.claims"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.resources.claims.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.resources.claims.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Request is the name chosen for a request in the referenced claim. If empty, everything from the claim is made available, otherwise only the result of this request.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.resources.claims.<name>.request"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.resources.limits"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.resources.requests"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>RestartCount holds the number of times the container has been restarted. Kubelet makes an effort to always increment the value, but there are cases when the state may be lost due to node restarts and then the value may be reset to 0. The value is never negative.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.restartCount"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Started indicates whether the container has finished its postStart lifecycle hook and passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. In both cases, startup probes will run again. Is always true when no startupProbe is defined and container is running and has passed the postStart lifecycle hook. The null value must be treated the same as false.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.started"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>State holds details about the container's current condition.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a running container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.running"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which the container was last (re-)started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.running.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a terminated container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.terminated"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Container's ID in the format '&lt;type&gt;://&lt;container_id&gt;'</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.terminated.containerID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Exit status from the last termination of the container</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.terminated.exitCode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which the container last terminated</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.terminated.finishedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message regarding the last termination of the container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.terminated.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason from the last termination of the container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.terminated.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Signal from the last termination of the container</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.terminated.signal"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time at which previous execution of the container started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.terminated.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Details about a waiting container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.waiting"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message regarding why the container is not yet running.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.waiting.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason the container is not yet running.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.state.waiting.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>StopSignal reports the effective stop signal for this container</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.stopSignal"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>User represents user identity information initially attached to the first process of the container</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.user"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Linux holds user identity information initially attached to the first process of the containers in Linux. Note that the actual running identity can be changed if the process has enough privilege to do so.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.user.linux"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GID is the primary gid initially attached to the first process in the container</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.user.linux.gid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>SupplementalGroups are the supplemental groups initially attached to the first process in the container</p>","example":null,"read_only":false,"type":"null or (list of signed integer)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.user.linux.supplementalGroups"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the primary uid initially attached to the first process in the container</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.user.linux.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Status of volume mounts.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.volumeMounts"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.volumeMounts.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MountPath corresponds to the original VolumeMount.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.volumeMounts.<name>.mountPath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name corresponds to the name of the original VolumeMount.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.volumeMounts.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ReadOnly corresponds to the original VolumeMount.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.volumeMounts.<name>.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>RecursiveReadOnly must be set to Disabled, Enabled, or unspecified (for non-readonly mounts). An IfPossible value in the original VolumeMount must be translated to Disabled or Enabled, depending on the mount result.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.initContainerStatuses.<name>.volumeMounts.<name>.recursiveReadOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A human readable message indicating details about why the pod is in this condition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.nominatedNodeName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If set, this represents the .metadata.generation that the pod status was set based upon. This is an alpha field. Enable PodObservedGenerationTracking to be able to use this field.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.observedGeneration"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:</p>\n<p>Pending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.</p>\n<p>More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.phase"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>podIP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.podIP"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>podIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must match the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list is empty if no IPs have been allocated yet.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.podIPs"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.podIPs.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>IP is the IP address assigned to the pod</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.podIPs.<name>.ip"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-qos/#quality-of-service-classes</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.qosClass"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Status of resources resize desired for pod's containers. It is empty if no resources resize is pending. Any changes to container resources will automatically set this to &quot;Proposed&quot; Deprecated: Resize status is moved to two pod conditions PodResizePending and PodResizeInProgress. PodResizePending will track states where the spec has been resized, but the Kubelet has not yet allocated the resources. PodResizeInProgress will track in-progress resizes, and should be present whenever allocated resources != acknowledged resources.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.resize"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Status of resource claims.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.core.v1.Pod.<name>.status.resourceClaimStatuses"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.Pod.<name>.status.resourceClaimStatuses.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name uniquely identifies this resource claim inside the pod. This must match the name of an entry in pod.spec.resourceClaims, which implies that the string must be a DNS_LABEL.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.core.v1.Pod.<name>.status.resourceClaimStatuses.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceClaimName is the name of the ResourceClaim that was generated for the Pod in the namespace of the Pod. If this is unset, then generating a ResourceClaim was not necessary. The pod.spec.resourceClaims entry can be ignored in this case.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.resourceClaimStatuses.<name>.resourceClaimName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.Pod.<name>.status.startTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>PodTemplate describes a template for creating copies of a predefined pod.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.core.v1.PodTemplate"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.core.v1.PodTemplate.<name>.metadata.managedFields.*.operation"}]