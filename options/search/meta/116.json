[{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MessageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a rule, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the rule; the only difference is the return type. Example: &quot;x must be less than max (&quot;+string(self.max)+&quot;)&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.schema.openAPIV3Schema.x-kubernetes-validations.<name>.messageExpression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>optionalOldSelf is used to opt a transition rule into evaluation even when the object is first created, or if the old object is missing the value.</p>\n<p>When enabled <code>oldSelf</code> will be a CEL optional whose value will be <code>None</code> if there is no old value, or when the object is initially created.</p>\n<p>You may check for presence of oldSelf using <code>oldSelf.hasValue()</code> and unwrap it after checking using <code>oldSelf.value()</code>. Check the CEL documentation for Optional types for more information: https://pkg.go.dev/github.com/google/cel-go/cel#OptionalTypes</p>\n<p>May not be set unless <code>oldSelf</code> is used in <code>rule</code>.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.schema.openAPIV3Schema.x-kubernetes-validations.<name>.optionalOldSelf"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>reason provides a machine-readable validation failure reason that is returned to the caller when a request fails this validation rule. The HTTP status code returned to the caller will match the reason of the reason of the first failed validation rule. The currently supported reasons are: &quot;FieldValueInvalid&quot;, &quot;FieldValueForbidden&quot;, &quot;FieldValueRequired&quot;, &quot;FieldValueDuplicate&quot;. If not set, default to use &quot;FieldValueInvalid&quot;. All future added reasons must be accepted by clients when reading this value and unknown reasons should be treated as FieldValueInvalid.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.schema.openAPIV3Schema.x-kubernetes-validations.<name>.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Rule represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec The Rule is scoped to the location of the x-kubernetes-validations extension in the schema. The <code>self</code> variable in the CEL expression is bound to the scoped value. Example: - Rule scoped to the root of a resource with a status subresource: {&quot;rule&quot;: &quot;self.status.actual &lt;= self.spec.maxDesired&quot;}</p>\n<p>If the Rule is scoped to an object with properties, the accessible properties of the object are field selectable via <code>self.field</code> and field presence can be checked via <code>has(self.field)</code>. Null valued fields are treated as absent fields in CEL expressions. If the Rule is scoped to an object with additionalProperties (i.e. a map) the value of the map are accessible via <code>self[mapKey]</code>, map containment can be checked via <code>mapKey in self</code> and all entries of the map are accessible via CEL macros and functions such as <code>self.all(...)</code>. If the Rule is scoped to an array, the elements of the array are accessible via <code>self[i]</code> and also by macros and functions. If the Rule is scoped to a scalar, <code>self</code> is bound to the scalar value. Examples: - Rule scoped to a map of objects: {&quot;rule&quot;: &quot;self.components['Widget'].priority &lt; 10&quot;} - Rule scoped to a list of integers: {&quot;rule&quot;: &quot;self.values.all(value, value &gt;= 0 &amp;&amp; value &lt; 100)&quot;} - Rule scoped to a string value: {&quot;rule&quot;: &quot;self.startsWith('kube')&quot;}</p>\n<p>The <code>apiVersion</code>, <code>kind</code>, <code>metadata.name</code> and <code>metadata.generateName</code> are always accessible from the root of the object and from any x-kubernetes-embedded-resource annotated objects. No other metadata properties are accessible.</p>\n<p>Unknown data preserved in custom resources via x-kubernetes-preserve-unknown-fields is not accessible in CEL expressions. This includes: - Unknown field values that are preserved by object schemas with x-kubernetes-preserve-unknown-fields. - Object properties where the property schema is of an &quot;unknown type&quot;. An &quot;unknown type&quot; is recursively defined as:</p>\n<ul>\n<li>A schema with no type and x-kubernetes-preserve-unknown-fields set to true</li>\n<li>An array where the items schema is of an &quot;unknown type&quot;</li>\n<li>An object where the additionalProperties schema is of an &quot;unknown type&quot;</li>\n</ul>\n<p>Only property names of the form <code>[a-zA-Z_.-/][a-zA-Z0-9_.-/]*</code> are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '<strong>' escapes to '<strong>underscores</strong>' - '.' escapes to '<strong>dot</strong>' - '-' escapes to '<strong>dash</strong>' - '/' escapes to '<strong>slash</strong>' - Property names that exactly match a CEL RESERVED keyword escape to '</strong>{keyword}__'. The keywords are:</p>\n<pre><code>  &quot;true&quot;, &quot;false&quot;, &quot;null&quot;, &quot;in&quot;, &quot;as&quot;, &quot;break&quot;, &quot;const&quot;, &quot;continue&quot;, &quot;else&quot;, &quot;for&quot;, &quot;function&quot;, &quot;if&quot;,\n  &quot;import&quot;, &quot;let&quot;, &quot;loop&quot;, &quot;package&quot;, &quot;namespace&quot;, &quot;return&quot;.\n</code></pre>\n<p>Examples:</p>\n<ul>\n<li>Rule accessing a property named &quot;namespace&quot;: {&quot;rule&quot;: &quot;self.<strong>namespace</strong> &gt; 0&quot;}</li>\n<li>Rule accessing a property named &quot;x-prop&quot;: {&quot;rule&quot;: &quot;self.x__dash__prop &gt; 0&quot;}</li>\n<li>Rule accessing a property named &quot;redact__d&quot;: {&quot;rule&quot;: &quot;self.redact__underscores__d &gt; 0&quot;}</li>\n</ul>\n<p>Equality on arrays with x-kubernetes-list-type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:</p>\n<ul>\n<li>'set': <code>X + Y</code> performs a union where the array positions of all elements in <code>X</code> are preserved and\nnon-intersecting elements in <code>Y</code> are appended, retaining their partial order.</li>\n<li>'map': <code>X + Y</code> performs a merge where the array positions of all keys in <code>X</code> are preserved but the values\nare overwritten by values in <code>Y</code> when the key sets of <code>X</code> and <code>Y</code> intersect. Elements in <code>Y</code> with\nnon-intersecting keys are appended, retaining their partial order.</li>\n</ul>\n<p>If <code>rule</code> makes use of the <code>oldSelf</code> variable it is implicitly a <code>transition rule</code>.</p>\n<p>By default, the <code>oldSelf</code> variable is the same type as <code>self</code>. When <code>optionalOldSelf</code> is true, the <code>oldSelf</code> variable is a CEL optional\nvariable whose value() is the same type as <code>self</code>.\nSee the documentation for the <code>optionalOldSelf</code> field for details.</p>\n<p>Transition rules by default are applied only on UPDATE requests and are skipped if an old value could not be found. You can opt a transition rule into unconditional evaluation by setting <code>optionalOldSelf</code> to true.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.schema.openAPIV3Schema.x-kubernetes-validations.<name>.rule"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>selectableFields specifies paths to fields that may be used as field selectors. A maximum of 8 selectable fields are allowed. See https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.selectableFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>jsonPath is a simple JSON path which is evaluated against each custom resource to produce a field selector value. Only JSON paths without the array notation are allowed. Must point to a field of type string, boolean or integer. Types with enum values and strings with formats are allowed. If jsonPath refers to absent field in a resource, the jsonPath evaluates to an empty string. Must not point to metdata fields. Required.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.selectableFields.*.jsonPath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>served is a flag enabling/disabling this version from being served via REST APIs</p>","example":null,"read_only":false,"type":"boolean","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.served"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.</p>","example":null,"read_only":false,"type":"boolean","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.storage"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>subresources specify what subresources this version of the defined custom resource have.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.subresources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>scale indicates the custom resource should serve a <code>/scale</code> subresource that returns an <code>autoscaling/v1</code> Scale object.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.subresources.scale"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale <code>status.selector</code>. Only JSON paths without the array notation are allowed. Must be a JSON Path under <code>.status</code> or <code>.spec</code>. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the <code>status.selector</code> value in the <code>/scale</code> subresource will default to the empty string.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.subresources.scale.labelSelectorPath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale <code>spec.replicas</code>. Only JSON paths without the array notation are allowed. Must be a JSON Path under <code>.spec</code>. If there is no value under the given path in the custom resource, the <code>/scale</code> subresource will return an error on GET.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.subresources.scale.specReplicasPath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale <code>status.replicas</code>. Only JSON paths without the array notation are allowed. Must be a JSON Path under <code>.status</code>. If there is no value under the given path in the custom resource, the <code>status.replicas</code> value in the <code>/scale</code> subresource will default to 0.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.subresources.scale.statusReplicasPath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>status indicates the custom resource should serve a <code>/status</code> subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the <code>status</code> stanza of the object. 2. requests to the custom resource <code>/status</code> subresource ignore changes to anything other than the <code>status</code> stanza of the object.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.customResourceDefinitions.<name>.spec.versions.<name>.subresources.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>status indicates the actual state of the CustomResourceDefinition</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.customResourceDefinitions.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.acceptedNames"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like <code>kubectl get all</code>.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.acceptedNames.categories"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the <code>kind</code> attribute in API calls.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.acceptedNames.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>listKind is the serialized kind of the list for this resource. Defaults to &quot;<code>kind</code>List&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.acceptedNames.listKind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>plural is the plural name of the resource to serve. The custom resources are served under <code>/apis/&lt;group&gt;/&lt;version&gt;/.../&lt;plural&gt;</code>. Must match the name of the CustomResourceDefinition (in the form <code>&lt;names.plural&gt;.&lt;group&gt;</code>). Must be all lowercase.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.acceptedNames.plural"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like <code>kubectl get &lt;shortname&gt;</code>. It must be all lowercase.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.acceptedNames.shortNames"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased <code>kind</code>.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.acceptedNames.singular"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>conditions indicate state for particular aspects of a CustomResourceDefinition</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.conditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>lastTransitionTime last time the condition transitioned from one status to another.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.conditions.*.lastTransitionTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>message is a human-readable message indicating details about last transition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.conditions.*.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>reason is a unique, one-word, CamelCase reason for the condition's last transition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.conditions.*.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>status is the status of the condition. Can be True, False, Unknown.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.conditions.*.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>type is the type of the condition. Types include Established, NamesAccepted and Terminating.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.conditions.*.type"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from <code>spec.versions</code> while they exist in this list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.customResourceDefinitions.<name>.status.storedVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>DaemonSet represents the configuration of a daemon set.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.daemonSets"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.metadata.ownerReferences.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.daemonSets.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.daemonSets.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The desired behavior of this daemon set. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.minReadySeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.revisionHistoryLimit"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A label query over pods that are managed by the daemon set. Must match in order to be controlled. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.daemonSets.<name>.spec.selector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.selector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.selector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.selector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.selector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.selector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). The only allowed template.spec.restartPolicy value is &quot;Always&quot;. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.daemonSets.<name>.spec.template"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.ownerReferences.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.activeDeadlineSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If specified, the pod's scheduling constraints</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Describes node affinity scheduling rules for the pod.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &quot;weight&quot; to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A node selector term, associated with the corresponding weight.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A list of node selector requirements by node's labels.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A list of node selector requirements by node's fields.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchFields.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchFields.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchFields.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.weight"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Required. A list of node selector terms. The terms are ORed.</p>","example":null,"read_only":false,"type":"list of (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A list of node selector requirements by node's labels.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A list of node selector requirements by node's fields.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchFields.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchFields.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchFields.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &quot;weight&quot; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Required. A pod affinity term, associated with the corresponding weight.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.matchLabelKeys"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.mismatchLabelKeys"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means &quot;this pod's namespace&quot;. An empty selector ({}) matches all namespaces.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means &quot;this pod's namespace&quot;.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaces"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.topologyKey"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.weight"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.matchLabelKeys"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.mismatchLabelKeys"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means &quot;this pod's namespace&quot;. An empty selector ({}) matches all namespaces.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means &quot;this pod's namespace&quot;.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaces"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.topologyKey"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &quot;weight&quot; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Required. A pod affinity term, associated with the corresponding weight.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.matchLabelKeys"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.mismatchLabelKeys"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means &quot;this pod's namespace&quot;. An empty selector ({}) matches all namespaces.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means &quot;this pod's namespace&quot;.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaces"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.topologyKey"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.weight"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.matchLabelKeys"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.mismatchLabelKeys"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means &quot;this pod's namespace&quot;. An empty selector ({}) matches all namespaces.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means &quot;this pod's namespace&quot;.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaces"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.topologyKey"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.automountServiceAccountToken"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.</p>","example":null,"read_only":false,"type":"attribute set of (submodule) or list of (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. &quot;$$(VAR_NAME)&quot; will produce the string literal &quot;$(VAR_NAME)&quot;. Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.args"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. &quot;$$(VAR_NAME)&quot; will produce the string literal &quot;$(VAR_NAME)&quot;. Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.command"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of environment variables to set in the container. Cannot be updated.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the environment variable. Must be a C_IDENTIFIER.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. &quot;$$(VAR_NAME)&quot; will produce the string literal &quot;$(VAR_NAME)&quot;. Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to &quot;&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Source for the environment variable's value. Cannot be used if value is not empty.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Selects a key of a ConfigMap.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.configMapKeyRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The key to select.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.configMapKeyRef.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.configMapKeyRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specify whether the ConfigMap or its key must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.configMapKeyRef.optional"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Selects a field of the pod: supports metadata.name, metadata.namespace, <code>metadata.labels['&lt;KEY&gt;']</code>, <code>metadata.annotations['&lt;KEY&gt;']</code>, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.fieldRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Version of the schema the FieldPath is written in terms of, defaults to &quot;v1&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.fieldRef.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Path of the field to select in the specified API version.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.fieldRef.fieldPath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.resourceFieldRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Container name: required for volumes, optional for env vars</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.resourceFieldRef.containerName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specifies the output format of the exposed resources, defaults to &quot;1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.resourceFieldRef.divisor"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Required: resource to select</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.resourceFieldRef.resource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Selects a key of a secret in the pod's namespace</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.secretKeyRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The key of the secret to select from.  Must be a valid secret key.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.secretKeyRef.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.secretKeyRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specify whether the Secret or its key must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.secretKeyRef.optional"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.envFrom"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The ConfigMap to select from</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.envFrom.*.configMapRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.envFrom.*.configMapRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specify whether the ConfigMap must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.envFrom.*.configMapRef.optional"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.envFrom.*.prefix"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The Secret to select from</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.envFrom.*.secretRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.envFrom.*.secretRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specify whether the Secret must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.envFrom.*.secretRef.optional"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.image"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.imagePullPolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Actions that the management system should take in response to container lifecycle events. Cannot be updated.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Exec specifies a command to execute in the container.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.exec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.exec.command"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>HTTPGet specifies an HTTP GET request to perform.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.httpGet"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Host name to connect to, defaults to the pod IP. You probably want to set &quot;Host&quot; in httpHeaders instead.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.httpGet.host"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Custom headers to set in the request. HTTP allows repeated headers.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.httpGet.httpHeaders"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.httpGet.httpHeaders.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.httpGet.httpHeaders.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The header field value</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.httpGet.httpHeaders.<name>.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Path to access on the HTTP server.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.httpGet.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.</p>","example":null,"read_only":false,"type":"signed integer or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.httpGet.port"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Scheme to use for connecting to the host. Defaults to HTTP.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.httpGet.scheme"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Sleep represents a duration that the container should sleep.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.sleep"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Seconds is the number of seconds to sleep.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.sleep.seconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for backward compatibility. There is no validation of this field and lifecycle hooks will fail at runtime when it is specified.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.tcpSocket"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Optional: Host name to connect to, defaults to the pod IP.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.tcpSocket.host"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.</p>","example":null,"read_only":false,"type":"signed integer or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.tcpSocket.port"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Exec specifies a command to execute in the container.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.exec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.exec.command"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>HTTPGet specifies an HTTP GET request to perform.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.httpGet"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Host name to connect to, defaults to the pod IP. You probably want to set &quot;Host&quot; in httpHeaders instead.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.httpGet.host"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Custom headers to set in the request. HTTP allows repeated headers.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.httpGet.httpHeaders"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.httpGet.httpHeaders.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.httpGet.httpHeaders.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The header field value</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.httpGet.httpHeaders.<name>.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Path to access on the HTTP server.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.httpGet.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.</p>","example":null,"read_only":false,"type":"signed integer or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.httpGet.port"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Scheme to use for connecting to the host. Defaults to HTTP.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.httpGet.scheme"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Sleep represents a duration that the container should sleep.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.sleep"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Seconds is the number of seconds to sleep.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.sleep.seconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for backward compatibility. There is no validation of this field and lifecycle hooks will fail at runtime when it is specified.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.tcpSocket"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Optional: Host name to connect to, defaults to the pod IP.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.tcpSocket.host"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.</p>","example":null,"read_only":false,"type":"signed integer or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.preStop.tcpSocket.port"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>StopSignal defines which signal will be sent to a container when it is being stopped. If not specified, the default is defined by the container runtime in use. StopSignal can only be set for Pods with a non-empty .spec.os.name</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.lifecycle.stopSignal"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Exec specifies a command to execute in the container.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.exec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.exec.command"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.failureThreshold"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GRPC specifies a GRPC HealthCheckRequest.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.grpc"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Port number of the gRPC service. Number must be in the range 1 to 65535.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.grpc.port"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).</p>\n<p>If this is not specified, the default behavior is defined by gRPC.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.grpc.service"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>HTTPGet specifies an HTTP GET request to perform.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.httpGet"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Host name to connect to, defaults to the pod IP. You probably want to set &quot;Host&quot; in httpHeaders instead.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.httpGet.host"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Custom headers to set in the request. HTTP allows repeated headers.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.httpGet.httpHeaders"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.httpGet.httpHeaders.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.httpGet.httpHeaders.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The header field value</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.httpGet.httpHeaders.<name>.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Path to access on the HTTP server.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.httpGet.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.</p>","example":null,"read_only":false,"type":"signed integer or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.httpGet.port"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Scheme to use for connecting to the host. Defaults to HTTP.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.httpGet.scheme"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.initialDelaySeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.periodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.successThreshold"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>TCPSocket specifies a connection to a TCP port.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.tcpSocket"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Optional: Host name to connect to, defaults to the pod IP.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.tcpSocket.host"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.</p>","example":null,"read_only":false,"type":"signed integer or (string)","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.tcpSocket.port"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.terminationGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.livenessProbe.timeoutSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default &quot;0.0.0.0&quot; address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.ports"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.ports.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of port to expose on the pod's IP address. This must be a valid port number, 0 &lt; x &lt; 65536.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.daemonSets.<name>.spec.template.spec.containers.<name>.ports.<name>.containerPort"}]