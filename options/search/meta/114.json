[{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.iscsi.targetPortal"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.nfs"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.nfs.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.nfs.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.nfs.server"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.persistentVolumeClaim"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.persistentVolumeClaim.claimName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>readOnly Will force the ReadOnly setting in VolumeMounts. Default false.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.persistentVolumeClaim.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine. Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.photonPersistentDisk"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;, &quot;ntfs&quot;. Implicitly inferred to be &quot;ext4&quot; if unspecified.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.photonPersistentDisk.fsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>pdID is the ID that identifies Photon Controller persistent disk</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.photonPersistentDisk.pdID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>portworxVolume represents a portworx volume attached and mounted on kubelets host machine. Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate is on.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.portworxVolume"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;. Implicitly inferred to be &quot;ext4&quot; if unspecified.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.portworxVolume.fsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.portworxVolume.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeID uniquely identifies a Portworx volume</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.portworxVolume.volumeID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>projected items for all in one resources secrets, configmaps, and downward API</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.defaultMode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>sources is the list of volume projections. Each entry in this list handles one source.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ClusterTrustBundle allows a pod to access the <code>.spec.trustBundle</code> field of ClusterTrustBundle objects in an auto-updating file.</p>\n<p>Alpha, gated by the ClusterTrustBundleProjection feature gate.</p>\n<p>ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.</p>\n<p>Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.clusterTrustBundle"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as &quot;match nothing&quot;.  If set but empty, interpreted as &quot;match everything&quot;.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.clusterTrustBundle.labelSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.clusterTrustBundle.labelSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.clusterTrustBundle.labelSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.clusterTrustBundle.labelSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.clusterTrustBundle.labelSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.clusterTrustBundle.labelSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Select a single ClusterTrustBundle by object name.  Mutually-exclusive with signerName and labelSelector.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.clusterTrustBundle.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, don't block pod startup if the referenced ClusterTrustBundle(s) aren't available.  If using name, then the named ClusterTrustBundle is allowed not to exist.  If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.clusterTrustBundle.optional"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Relative path from the volume root to write the bundle.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.clusterTrustBundle.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name.  The contents of all selected ClusterTrustBundles will be unified and deduplicated.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.clusterTrustBundle.signerName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>configMap information about the configMap data to project</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.configMap"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.configMap.items"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the key to project.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.configMap.items.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.configMap.items.*.mode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.configMap.items.*.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.configMap.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>optional specify whether the ConfigMap or its keys must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.configMap.optional"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>downwardAPI information about the downwardAPI data to project</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.downwardAPI"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Items is a list of DownwardAPIVolume file</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.downwardAPI.items"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.downwardAPI.items.*.fieldRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Version of the schema the FieldPath is written in terms of, defaults to &quot;v1&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.downwardAPI.items.*.fieldRef.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Path of the field to select in the specified API version.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.downwardAPI.items.*.fieldRef.fieldPath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.downwardAPI.items.*.mode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.downwardAPI.items.*.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.downwardAPI.items.*.resourceFieldRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Container name: required for volumes, optional for env vars</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.downwardAPI.items.*.resourceFieldRef.containerName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specifies the output format of the exposed resources, defaults to &quot;1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.downwardAPI.items.*.resourceFieldRef.divisor"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Required: resource to select</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.downwardAPI.items.*.resourceFieldRef.resource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>secret information about the secret data to project</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.secret"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.secret.items"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the key to project.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.secret.items.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.secret.items.*.mode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.secret.items.*.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.secret.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>optional field specify whether the Secret or its key must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.secret.optional"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>serviceAccountToken is information about the serviceAccountToken data to project</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.serviceAccountToken"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.serviceAccountToken.audience"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.serviceAccountToken.expirationSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>path is the path relative to the mount point of the file to project the token into.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.projected.sources.*.serviceAccountToken.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>quobyte represents a Quobyte mount on the host that shares a pod's lifetime. Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.quobyte"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>group to map volume access to Default is no group</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.quobyte.group"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.quobyte.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.quobyte.registry"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.quobyte.tenant"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>user to map volume access to Defaults to serivceaccount user</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.quobyte.user"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volume is a string that references an already created Quobyte volume by name.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.quobyte.volume"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported. More info: https://examples.k8s.io/volumes/rbd/README.md</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.rbd"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: &quot;ext4&quot;, &quot;xfs&quot;, &quot;ntfs&quot;. Implicitly inferred to be &quot;ext4&quot; if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.rbd.fsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.rbd.image"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.rbd.keyring"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"list of (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.rbd.monitors"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.rbd.pool"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.rbd.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.rbd.secretRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.rbd.secretRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.rbd.user"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes. Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.scaleIO"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;, &quot;ntfs&quot;. Default is &quot;xfs&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.scaleIO.fsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>gateway is the host address of the ScaleIO API Gateway.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.scaleIO.gateway"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.scaleIO.protectionDomain"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.scaleIO.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.scaleIO.secretRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.scaleIO.secretRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>sslEnabled Flag enable/disable SSL communication with Gateway, default false</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.scaleIO.sslEnabled"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.scaleIO.storageMode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storagePool is the ScaleIO Storage Pool associated with the protection domain.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.scaleIO.storagePool"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>system is the name of the storage system as configured in ScaleIO.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.scaleIO.system"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.scaleIO.volumeName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.secret"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.secret.defaultMode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.secret.items"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the key to project.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.secret.items.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.secret.items.*.mode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.secret.items.*.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>optional field specify whether the Secret or its keys must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.secret.optional"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.secret.secretName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes. Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.storageos"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;, &quot;ntfs&quot;. Implicitly inferred to be &quot;ext4&quot; if unspecified.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.storageos.fsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.storageos.readOnly"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.storageos.secretRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.storageos.secretRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.storageos.volumeName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to &quot;default&quot; if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.storageos.volumeNamespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine. Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type are redirected to the csi.vsphere.vmware.com CSI driver.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.vsphereVolume"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;, &quot;ntfs&quot;. Implicitly inferred to be &quot;ext4&quot; if unspecified.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.vsphereVolume.fsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.vsphereVolume.storagePolicyID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storagePolicyName is the storage Policy Based Management (SPBM) profile name.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.vsphereVolume.storagePolicyName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumePath is the path that identifies vSphere volume vmdk</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.spec.template.spec.volumes.<name>.vsphereVolume.volumePath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Most recently observed status of the Deployment.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deployments.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Total number of available non-terminating pods (ready for at least minReadySeconds) targeted by this deployment.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.status.availableReplicas"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.status.collisionCount"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Represents the latest available observations of a deployment's current state.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.deployments.<name>.status.conditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Last time the condition transitioned from one status to another.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.status.conditions.<name>.lastTransitionTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The last time this condition was updated.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.status.conditions.<name>.lastUpdateTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A human readable message indicating details about the transition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.status.conditions.<name>.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The reason for the condition's last transition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deployments.<name>.status.conditions.<name>.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Status of the condition, one of True, False, Unknown.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.status.conditions.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Type of deployment condition.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deployments.<name>.status.conditions.<name>.type"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The generation observed by the deployment controller.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.status.observedGeneration"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Total number of non-terminating pods targeted by this Deployment with a Ready Condition.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.status.readyReplicas"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Total number of non-terminating pods targeted by this deployment (their labels match the selector).</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.status.replicas"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Total number of terminating pods targeted by this deployment. Terminating pods have a non-null .metadata.deletionTimestamp and have not yet reached the Failed or Succeeded .status.phase.</p>\n<p>This is an alpha field. Enable DeploymentReplicaSetTerminatingReplicas to be able to use this field.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.status.terminatingReplicas"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.status.unavailableReplicas"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Total number of non-terminating pods targeted by this deployment that have the desired template spec.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deployments.<name>.status.updatedReplicas"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>DeviceClass is a vendor- or admin-provided resource that contains device configuration and selectors. It can be referenced in the device requests of a claim to apply these presets. Cluster scoped.</p>\n<p>This is an alpha type and requires enabling the DynamicResourceAllocation feature gate.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.deviceClasses"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deviceClasses.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.deviceClasses.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deviceClasses.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.deviceClasses.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deviceClasses.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.deviceClasses.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.deviceClasses.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.deviceClasses.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceClasses.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deviceClasses.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deviceClasses.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceClasses.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceClasses.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceClasses.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceClasses.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Spec defines what can be allocated and how to configure it.</p>\n<p>This is mutable. Consumers have to be prepared for classes changing at any time, either because they get updated or replaced. Claim allocations are done once based on whatever was set in classes at the time of allocation.</p>\n<p>Changing the spec automatically increments the metadata.generation number.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.deviceClasses.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Config defines configuration parameters that apply to each device that is claimed via this class. Some classses may potentially be satisfied by multiple drivers, so each instance of a vendor configuration applies to exactly one driver.</p>\n<p>They are passed to the driver, but are not considered while allocating the claim.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.deviceClasses.<name>.spec.config"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Opaque provides driver-specific configuration parameters.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deviceClasses.<name>.spec.config.*.opaque"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Driver is used to determine which kubelet plugin needs to be passed these configuration parameters.</p>\n<p>An admission policy provided by the driver developer could use this to decide whether it needs to validate them.</p>\n<p>Must be a DNS subdomain and should end with a DNS domain owned by the vendor of the driver.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceClasses.<name>.spec.config.*.opaque.driver"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Parameters can contain arbitrary data. It is the responsibility of the driver developer to handle validation and versioning. Typically this includes self-identification and a version (&quot;kind&quot; + &quot;apiVersion&quot; for Kubernetes types), with conversion between different versions.</p>\n<p>The length of the raw data must be smaller or equal to 10 Ki.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.deviceClasses.<name>.spec.config.*.opaque.parameters"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Each selector must be satisfied by a device which is claimed via this class.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.deviceClasses.<name>.spec.selectors"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CEL contains a CEL expression for selecting a device.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deviceClasses.<name>.spec.selectors.*.cel"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Expression is a CEL expression which evaluates a single device. It must evaluate to true when the device under consideration satisfies the desired criteria, and false when it does not. Any other result is an error and causes allocation of devices to abort.</p>\n<p>The expression's input is an object named &quot;device&quot;, which carries the following properties:</p>\n<ul>\n<li>driver (string): the name of the driver which defines this device.</li>\n<li>attributes (map[string]object): the device's attributes, grouped by prefix\n(e.g. device.attributes[&quot;dra.example.com&quot;] evaluates to an object with all\nof the attributes which were prefixed by &quot;dra.example.com&quot;.</li>\n<li>capacity (map[string]object): the device's capacities, grouped by prefix.</li>\n</ul>\n<p>Example: Consider a device with driver=&quot;dra.example.com&quot;, which exposes two attributes named &quot;model&quot; and &quot;ext.example.com/family&quot; and which exposes one capacity named &quot;modules&quot;. This input to this expression would have the following fields:</p>\n<pre><code>device.driver\ndevice.attributes[&quot;dra.example.com&quot;].model\ndevice.attributes[&quot;ext.example.com&quot;].family\ndevice.capacity[&quot;dra.example.com&quot;].modules\n</code></pre>\n<p>The device.driver field can be used to check for a specific driver, either as a high-level precondition (i.e. you only want to consider devices from this driver) or as part of a multi-clause expression that is meant to consider devices from different drivers.</p>\n<p>The value type of each attribute is defined by the device definition, and users who write these expressions must consult the documentation for their specific drivers. The value type of each capacity is Quantity.</p>\n<p>If an unknown prefix is used as a lookup in either device.attributes or device.capacity, an empty map will be returned. Any reference to an unknown field will cause an evaluation error and allocation to abort.</p>\n<p>A robust expression should check for the existence of attributes before referencing them.</p>\n<p>For ease of use, the cel.bind() function is enabled, and can be used to simplify expressions that access multiple attributes with the same domain. For example:</p>\n<pre><code>cel.bind(dra, device.attributes[&quot;dra.example.com&quot;], dra.someBool &amp;&amp; dra.anotherBool)\n</code></pre>\n<p>The length of the expression must be smaller or equal to 10 Ki. The cost of evaluating it is also limited based on the estimated number of logical steps.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceClasses.<name>.spec.selectors.*.cel.expression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>DeviceTaintRule adds one taint to all devices which match the selector. This has the same effect as if the taint was specified directly in the ResourceSlice by the DRA driver.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.deviceTaintRules"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Spec specifies the selector and one taint.</p>\n<p>Changing the spec automatically increments the metadata.generation number.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.deviceTaintRules.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeviceSelector defines which device(s) the taint is applied to. All selector criteria must be satified for a device to match. The empty selector matches all devices. Without a selector, no devices are matches.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.deviceSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If device is set, only devices with that name are selected. This field corresponds to slice.spec.devices[].name.</p>\n<p>Setting also driver and pool may be required to avoid ambiguity, but is not required.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.deviceSelector.device"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If DeviceClassName is set, the selectors defined there must be satisfied by a device to be selected. This field corresponds to class.metadata.name.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.deviceSelector.deviceClassName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If driver is set, only devices from that driver are selected. This fields corresponds to slice.spec.driver.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.deviceSelector.driver"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If pool is set, only devices in that pool are selected.</p>\n<p>Also setting the driver name may be useful to avoid ambiguity when different drivers use the same pool name, but this is not required because selecting pools from different drivers may also be useful, for example when drivers with node-local devices use the node name as their pool name.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.deviceSelector.pool"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Selectors contains the same selection criteria as a ResourceClaim. Currently, CEL expressions are supported. All of these selectors must be satisfied.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.deviceSelector.selectors"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CEL contains a CEL expression for selecting a device.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.deviceSelector.selectors.*.cel"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Expression is a CEL expression which evaluates a single device. It must evaluate to true when the device under consideration satisfies the desired criteria, and false when it does not. Any other result is an error and causes allocation of devices to abort.</p>\n<p>The expression's input is an object named &quot;device&quot;, which carries the following properties:</p>\n<ul>\n<li>driver (string): the name of the driver which defines this device.</li>\n<li>attributes (map[string]object): the device's attributes, grouped by prefix\n(e.g. device.attributes[&quot;dra.example.com&quot;] evaluates to an object with all\nof the attributes which were prefixed by &quot;dra.example.com&quot;.</li>\n<li>capacity (map[string]object): the device's capacities, grouped by prefix.</li>\n</ul>\n<p>Example: Consider a device with driver=&quot;dra.example.com&quot;, which exposes two attributes named &quot;model&quot; and &quot;ext.example.com/family&quot; and which exposes one capacity named &quot;modules&quot;. This input to this expression would have the following fields:</p>\n<pre><code>device.driver\ndevice.attributes[&quot;dra.example.com&quot;].model\ndevice.attributes[&quot;ext.example.com&quot;].family\ndevice.capacity[&quot;dra.example.com&quot;].modules\n</code></pre>\n<p>The device.driver field can be used to check for a specific driver, either as a high-level precondition (i.e. you only want to consider devices from this driver) or as part of a multi-clause expression that is meant to consider devices from different drivers.</p>\n<p>The value type of each attribute is defined by the device definition, and users who write these expressions must consult the documentation for their specific drivers. The value type of each capacity is Quantity.</p>\n<p>If an unknown prefix is used as a lookup in either device.attributes or device.capacity, an empty map will be returned. Any reference to an unknown field will cause an evaluation error and allocation to abort.</p>\n<p>A robust expression should check for the existence of attributes before referencing them.</p>\n<p>For ease of use, the cel.bind() function is enabled, and can be used to simplify expressions that access multiple attributes with the same domain. For example:</p>\n<pre><code>cel.bind(dra, device.attributes[&quot;dra.example.com&quot;], dra.someBool &amp;&amp; dra.anotherBool)\n</code></pre>\n<p>The length of the expression must be smaller or equal to 10 Ki. The cost of evaluating it is also limited based on the estimated number of logical steps.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.deviceSelector.selectors.*.cel.expression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The taint that gets applied to matching devices.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.taint"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The effect of the taint on claims that do not tolerate the taint and through such claims on the pods using them. Valid effects are NoSchedule and NoExecute. PreferNoSchedule as used for nodes is not valid here.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.taint.effect"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The taint key to be applied to a device. Must be a label name.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.taint.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>TimeAdded represents the time at which the taint was added. Added automatically during create or update if not set.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.taint.timeAdded"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The taint value corresponding to the taint key. Must be a label value.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.deviceTaintRules.<name>.spec.taint.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>EndpointSlice represents a set of service endpoints. Most EndpointSlices are created by the EndpointSlice controller to represent the Pods selected by Service objects. For a given service there may be multiple EndpointSlice objects which must be joined to produce the full set of endpoints; you can find all of the slices for a given service by listing EndpointSlices in the service's namespace whose <code>kubernetes.io/service-name</code> label contains the service's name.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.endpointSlices"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>addressType specifies the type of address carried by this EndpointSlice. All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name. (Deprecated) The EndpointSlice controller only generates, and kube-proxy only processes, slices of addressType &quot;IPv4&quot; and &quot;IPv6&quot;. No semantics are defined for the &quot;FQDN&quot; type.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.endpointSlices.<name>.addressType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000 endpoints.</p>","example":null,"read_only":false,"type":"list of (submodule)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>addresses of this endpoint. For EndpointSlices of addressType &quot;IPv4&quot; or &quot;IPv6&quot;, the values are IP addresses in canonical form. The syntax and semantics of other addressType values are not defined. This must contain at least one address but no more than 100. EndpointSlices generated by the EndpointSlice controller will always have exactly 1 address. No semantics are defined for additional addresses beyond the first, and kube-proxy does not look at them.</p>","example":null,"read_only":false,"type":"list of (string)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.addresses"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>conditions contains information about the current status of the endpoint.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.conditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ready indicates that this endpoint is ready to receive traffic, according to whatever system is managing the endpoint. A nil value should be interpreted as &quot;true&quot;. In general, an endpoint should be marked ready if it is serving and not terminating, though this can be overridden in some cases, such as when the associated Service has set the publishNotReadyAddresses flag.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.conditions.ready"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>serving indicates that this endpoint is able to receive traffic, according to whatever system is managing the endpoint. For endpoints backed by pods, the EndpointSlice controller will mark the endpoint as serving if the pod's Ready condition is True. A nil value should be interpreted as &quot;true&quot;.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.conditions.serving"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>terminating indicates that this endpoint is terminating. A nil value should be interpreted as &quot;false&quot;.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.conditions.terminating"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>deprecatedTopology contains topology information part of the v1beta1 API. This field is deprecated, and will be removed when the v1beta1 API is removed (no sooner than kubernetes v1.24).  While this field can hold values, it is not writable through the v1 API, and any attempts to write to it will be silently ignored. Topology information can be found in the zone and nodeName fields instead.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.deprecatedTopology"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>hints contains information associated with how an endpoint should be consumed.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.hints"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>forNodes indicates the node(s) this endpoint should be consumed by when using topology aware routing. May contain a maximum of 8 entries. This is an Alpha feature and is only used when the PreferSameTrafficDistribution feature gate is enabled.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.hints.forNodes"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>name represents the name of the node.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.hints.forNodes.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>forZones indicates the zone(s) this endpoint should be consumed by when using topology aware routing. May contain a maximum of 8 entries.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.hints.forZones"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>name represents the name of the zone.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.hints.forZones.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>hostname of this endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must be lowercase and pass DNS Label (RFC 1123) validation.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.hostname"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>nodeName represents the name of the Node hosting this endpoint. This can be used to determine endpoints local to a Node.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.nodeName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>targetRef is a reference to a Kubernetes object that represents this endpoint.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.targetRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.targetRef.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: &quot;spec.containers{name}&quot; (where &quot;name&quot; refers to the name of the container that triggered the event) or if no container name is specified &quot;spec.containers[2]&quot; (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.targetRef.fieldPath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.targetRef.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.targetRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.targetRef.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.targetRef.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.targetRef.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>zone is the name of the Zone this endpoint exists in.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.endpoints.*.zone"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.endpointSlices.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.endpointSlices.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.endpointSlices.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.endpointSlices.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.endpointSlices.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.endpointSlices.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.endpointSlices.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.endpointSlices.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.endpointSlices.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.endpointSlices.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.endpointSlices.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.endpointSlices.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.endpointSlices.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.endpointSlices.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ports specifies the list of network ports exposed by each endpoint in this slice. Each port must have a unique name. Each slice may include a maximum of 100 ports. Services always have at least 1 port, so EndpointSlices generated by the EndpointSlice controller will likewise always have at least 1 port. EndpointSlices used for other purposes may have an empty ports list.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.endpointSlices.<name>.ports"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The application protocol for this port. This is used as a hint for implementations to offer richer behavior for protocols that they understand. This field follows standard Kubernetes label syntax. Valid values are either:</p>\n<ul>\n<li>\n<p>Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).</p>\n</li>\n<li>\n<p>Kubernetes-defined prefixed names:</p>\n<ul>\n<li>'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-</li>\n<li>'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455</li>\n<li>'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455</li>\n</ul>\n</li>\n<li>\n<p>Other protocols should use implementation-defined prefixed names such as mycompany.com/my-custom-protocol.</p>\n</li>\n</ul>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.ports.<name>.appProtocol"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>name represents the name of this port. All ports in an EndpointSlice must have a unique name. If the EndpointSlice is derived from a Kubernetes service, this corresponds to the Service.ports[].name. Name must either be an empty string or pass DNS_LABEL validation: * must be no more than 63 characters long. * must consist of lower case alphanumeric characters or '-'. * must start and end with an alphanumeric character. Default is empty string.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.ports.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>port represents the port number of the endpoint. If the EndpointSlice is derived from a Kubernetes service, this must be set to the service's target port. EndpointSlices used for other purposes may have a nil port.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.endpointSlices.<name>.ports.<name>.port"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>protocol represents the IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpointSlices.<name>.ports.<name>.protocol"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Endpoints is a collection of endpoints that implement the actual service. Example:</p>\n<pre><code> Name: &quot;mysvc&quot;,\n Subsets: [\n   {\n     Addresses: [{&quot;ip&quot;: &quot;10.10.1.1&quot;}, {&quot;ip&quot;: &quot;10.10.2.2&quot;}],\n     Ports: [{&quot;name&quot;: &quot;a&quot;, &quot;port&quot;: 8675}, {&quot;name&quot;: &quot;b&quot;, &quot;port&quot;: 309}]\n   },\n   {\n     Addresses: [{&quot;ip&quot;: &quot;10.10.3.3&quot;}],\n     Ports: [{&quot;name&quot;: &quot;a&quot;, &quot;port&quot;: 93}, {&quot;name&quot;: &quot;b&quot;, &quot;port&quot;: 76}]\n   },\n]\n</code></pre>\n<p>Endpoints is a legacy API and does not contain information about all Service features. Use discoveryv1.EndpointSlice for complete information about Service endpoints.</p>\n<p>Deprecated: This API is deprecated in v1.33+. Use discoveryv1.EndpointSlice.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.endpoints"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.endpoints.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.endpoints.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.endpoints.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.endpoints.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.endpoints.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.endpoints.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.endpoints.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.endpoints.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.endpoints.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.endpoints.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.endpoints.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.endpoints.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.endpoints.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.endpoints.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.endpoints.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.endpoints.<name>.metadata.ownerReferences.<name>.uid"}]