[{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.spec.template.spec.volumes.<name>.storageos.secretRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.spec.template.spec.volumes.<name>.storageos.volumeName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to &quot;default&quot; if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.spec.template.spec.volumes.<name>.storageos.volumeNamespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine. Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type are redirected to the csi.vsphere.vmware.com CSI driver.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.batch.v1.Job.<name>.spec.template.spec.volumes.<name>.vsphereVolume"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;, &quot;ntfs&quot;. Implicitly inferred to be &quot;ext4&quot; if unspecified.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.spec.template.spec.volumes.<name>.vsphereVolume.fsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.spec.template.spec.volumes.<name>.vsphereVolume.storagePolicyID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storagePolicyName is the storage Policy Based Management (SPBM) profile name.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.spec.template.spec.volumes.<name>.vsphereVolume.storagePolicyName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumePath is the path that identifies vSphere volume vmdk</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.batch.v1.Job.<name>.spec.template.spec.volumes.<name>.vsphereVolume.volumePath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.batch.v1.Job.<name>.spec.ttlSecondsAfterFinished"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Current status of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.batch.v1.Job.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The number of pending and running pods which are not terminating (without a deletionTimestamp). The value is zero for finished jobs.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.batch.v1.Job.<name>.status.active"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>completedIndexes holds the completed indexes when .spec.completionMode = &quot;Indexed&quot; in a text format. The indexes are represented as decimal integers separated by commas. The numbers are listed in increasing order. Three or more consecutive numbers are compressed and represented by the first and last element of the series, separated by a hyphen. For example, if the completed indexes are 1, 3, 4, 5 and 7, they are represented as &quot;1,3-5,7&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.status.completedIndexes"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. The completion time is set when the job finishes successfully, and only then. The value cannot be updated or removed. The value indicates the same or later point in time as the startTime field.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.status.completionTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The latest available observations of an object's current state. When a Job fails, one of the conditions will have type &quot;Failed&quot; and status true. When a Job is suspended, one of the conditions will have type &quot;Suspended&quot; and status true; when the Job is resumed, the status of this condition will become false. When a Job is completed, one of the conditions will have type &quot;Complete&quot; and status true.</p>\n<p>A job is considered finished when it is in a terminal condition, either &quot;Complete&quot; or &quot;Failed&quot;. A Job cannot have both the &quot;Complete&quot; and &quot;Failed&quot; conditions. Additionally, it cannot be in the &quot;Complete&quot; and &quot;FailureTarget&quot; conditions. The &quot;Complete&quot;, &quot;Failed&quot; and &quot;FailureTarget&quot; conditions cannot be disabled.</p>\n<p>More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.batch.v1.Job.<name>.status.conditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Last time the condition was checked.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.status.conditions.<name>.lastProbeTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Last time the condition transit from one status to another.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.status.conditions.<name>.lastTransitionTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Human readable message indicating details about last transition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.status.conditions.<name>.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason for the condition's last transition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.status.conditions.<name>.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Status of the condition, one of True, False, Unknown.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.batch.v1.Job.<name>.status.conditions.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Type of job condition, Complete or Failed.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.batch.v1.Job.<name>.status.conditions.<name>.type"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The number of pods which reached phase Failed. The value increases monotonically.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.batch.v1.Job.<name>.status.failed"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FailedIndexes holds the failed indexes when spec.backoffLimitPerIndex is set. The indexes are represented in the text format analogous as for the <code>completedIndexes</code> field, ie. they are kept as decimal integers separated by commas. The numbers are listed in increasing order. Three or more consecutive numbers are compressed and represented by the first and last element of the series, separated by a hyphen. For example, if the failed indexes are 1, 3, 4, 5 and 7, they are represented as &quot;1,3-5,7&quot;. The set of failed indexes cannot overlap with the set of completed indexes.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.status.failedIndexes"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The number of active pods which have a Ready condition and are not terminating (without a deletionTimestamp).</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.batch.v1.Job.<name>.status.ready"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Represents time when the job controller started processing a job. When a Job is created in the suspended state, this field is not set until the first time it is resumed. This field is reset every time a Job is resumed from suspension. It is represented in RFC3339 form and is in UTC.</p>\n<p>Once set, the field can only be removed when the job is suspended. The field cannot be modified while the job is unsuspended or finished.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.batch.v1.Job.<name>.status.startTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The number of pods which reached phase Succeeded. The value increases monotonically for a given spec. However, it may decrease in reaction to scale down of elastic indexed jobs.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.batch.v1.Job.<name>.status.succeeded"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The number of pods which are terminating (in phase Pending or Running and have a deletionTimestamp).</p>\n<p>This field is beta-level. The job controller populates the field when the feature gate JobPodReplacementPolicy is enabled (enabled by default).</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.batch.v1.Job.<name>.status.terminating"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>uncountedTerminatedPods holds the UIDs of Pods that have terminated but the job controller hasn't yet accounted for in the status counters.</p>\n<p>The job controller creates pods with a finalizer. When a pod terminates (succeeded or failed), the controller does three steps to account for it in the job status:</p>\n<ol>\n<li>Add the pod UID to the arrays in this field. 2. Remove the pod finalizer. 3. Remove the pod UID from the arrays while increasing the corresponding\ncounter.</li>\n</ol>\n<p>Old jobs might not be tracked using this field, in which case the field remains null. The structure is empty for finished jobs.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.batch.v1.Job.<name>.status.uncountedTerminatedPods"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>failed holds UIDs of failed Pods.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.batch.v1.Job.<name>.status.uncountedTerminatedPods.failed"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>succeeded holds UIDs of succeeded Pods.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.batch.v1.Job.<name>.status.uncountedTerminatedPods.succeeded"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Binding ties one object to another; for example, a pod is bound to a node by a scheduler.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.bindings"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.bindings.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.bindings.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.bindings.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.bindings.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.bindings.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.bindings.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.bindings.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.bindings.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.bindings.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.bindings.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.bindings.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.bindings.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.bindings.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.bindings.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.bindings.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The target object that you want to bind to the standard object.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.bindings.<name>.target"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.target.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: &quot;spec.containers{name}&quot; (where &quot;name&quot; refers to the name of the container that triggered the event) or if no container name is specified &quot;spec.containers[2]&quot; (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.target.fieldPath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.target.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.target.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.target.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.target.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.bindings.<name>.target.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.cSIDrivers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object metadata. metadata.Name indicates the name of the CSI driver that this object refers to; it MUST be the same name returned by the CSI GetPluginName() call for that driver. The driver name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), dots (.), and alphanumerics between. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>spec represents the specification of the CSI Driver.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.cSIDrivers.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>attachRequired indicates this CSI volume driver requires an attach operation (because it implements the CSI ControllerPublishVolume() method), and that the Kubernetes attach detach controller should call the attach volume interface which checks the volumeattachment status and waits until the volume is attached before proceeding to mounting. The CSI external-attacher coordinates with CSI volume driver and updates the volumeattachment status when the attach operation is complete. If the CSIDriverRegistry feature gate is enabled and the value is specified to false, the attach operation will be skipped. Otherwise the attach operation will be called.</p>\n<p>This field is immutable.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.cSIDrivers.<name>.spec.attachRequired"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>fsGroupPolicy defines if the underlying volume supports changing ownership and permission of the volume before being mounted. Refer to the specific FSGroupPolicy values for additional details.</p>\n<p>This field was immutable in Kubernetes &lt; 1.29 and now is mutable.</p>\n<p>Defaults to ReadWriteOnceWithFSType, which will examine each volume to determine if Kubernetes should modify ownership and permissions of the volume. With the default policy the defined fsGroup will only be applied if a fstype is defined and the volume's access mode contains ReadWriteOnce.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIDrivers.<name>.spec.fsGroupPolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>nodeAllocatableUpdatePeriodSeconds specifies the interval between periodic updates of the CSINode allocatable capacity for this driver. When set, both periodic updates and updates triggered by capacity-related failures are enabled. If not set, no updates occur (neither periodic nor upon detecting capacity-related failures), and the allocatable.count remains static. The minimum allowed value for this field is 10 seconds.</p>\n<p>This is an alpha feature and requires the MutableCSINodeAllocatableCount feature gate to be enabled.</p>\n<p>This field is mutable.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.cSIDrivers.<name>.spec.nodeAllocatableUpdatePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>podInfoOnMount indicates this CSI volume driver requires additional pod information (like podName, podUID, etc.) during mount operations, if set to true. If set to false, pod information will not be passed on mount. Default is false.</p>\n<p>The CSI driver specifies podInfoOnMount as part of driver deployment. If true, Kubelet will pass pod information as VolumeContext in the CSI NodePublishVolume() calls. The CSI driver is responsible for parsing and validating the information passed in as VolumeContext.</p>\n<p>The following VolumeContext will be passed if podInfoOnMount is set to true. This list might grow, but the prefix will be used. &quot;csi.storage.k8s.io/pod.name&quot;: pod.Name &quot;csi.storage.k8s.io/pod.namespace&quot;: pod.Namespace &quot;csi.storage.k8s.io/pod.uid&quot;: string(pod.UID) &quot;csi.storage.k8s.io/ephemeral&quot;: &quot;true&quot; if the volume is an ephemeral inline volume\ndefined by a CSIVolumeSource, otherwise &quot;false&quot;</p>\n<p>&quot;csi.storage.k8s.io/ephemeral&quot; is a new feature in Kubernetes 1.16. It is only required for drivers which support both the &quot;Persistent&quot; and &quot;Ephemeral&quot; VolumeLifecycleMode. Other drivers can leave pod info disabled and/or ignore this field. As Kubernetes 1.15 doesn't support this field, drivers can only support one mode when deployed on such a cluster and the deployment determines which mode that is, for example via a command line parameter of the driver.</p>\n<p>This field was immutable in Kubernetes &lt; 1.29 and now is mutable.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.cSIDrivers.<name>.spec.podInfoOnMount"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>requiresRepublish indicates the CSI driver wants <code>NodePublishVolume</code> being periodically called to reflect any possible change in the mounted volume. This field defaults to false.</p>\n<p>Note: After a successful initial NodePublishVolume call, subsequent calls to NodePublishVolume should only update the contents of the volume. New mount points will not be seen by a running container.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.cSIDrivers.<name>.spec.requiresRepublish"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>seLinuxMount specifies if the CSI driver supports &quot;-o context&quot; mount option.</p>\n<p>When &quot;true&quot;, the CSI driver must ensure that all volumes provided by this CSI driver can be mounted separately with different <code>-o context</code> options. This is typical for storage backends that provide volumes as filesystems on block devices or as independent shared volumes. Kubernetes will call NodeStage / NodePublish with &quot;-o context=xyz&quot; mount option when mounting a ReadWriteOncePod volume used in Pod that has explicitly set SELinux context. In the future, it may be expanded to other volume AccessModes. In any case, Kubernetes will ensure that the volume is mounted only with a single SELinux context.</p>\n<p>When &quot;false&quot;, Kubernetes won't pass any special SELinux mount options to the driver. This is typical for volumes that represent subdirectories of a bigger shared filesystem.</p>\n<p>Default is &quot;false&quot;.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.cSIDrivers.<name>.spec.seLinuxMount"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storageCapacity indicates that the CSI volume driver wants pod scheduling to consider the storage capacity that the driver deployment will report by creating CSIStorageCapacity objects with capacity information, if set to true.</p>\n<p>The check can be enabled immediately when deploying a driver. In that case, provisioning new volumes with late binding will pause until the driver deployment has published some suitable CSIStorageCapacity object.</p>\n<p>Alternatively, the driver can be deployed with the field unset or false and it can be flipped later when storage capacity information has been published.</p>\n<p>This field was immutable in Kubernetes &lt;= 1.22 and now is mutable.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.cSIDrivers.<name>.spec.storageCapacity"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>tokenRequests indicates the CSI driver needs pods' service account tokens it is mounting volume for to do necessary authentication. Kubelet will pass the tokens in VolumeContext in the CSI NodePublishVolume calls. The CSI driver should parse and validate the following VolumeContext: &quot;csi.storage.k8s.io/serviceAccount.tokens&quot;: {\n&quot;&lt;audience&gt;&quot;: {\n&quot;token&quot;: &lt;token&gt;,\n&quot;expirationTimestamp&quot;: &lt;expiration timestamp in RFC3339&gt;,\n},\n...\n}</p>\n<p>Note: Audience in each TokenRequest should be different and at most one token is empty string. To receive a new token after expiry, RequiresRepublish can be used to trigger NodePublishVolume periodically.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.cSIDrivers.<name>.spec.tokenRequests"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>audience is the intended audience of the token in &quot;TokenRequestSpec&quot;. It will default to the audiences of kube apiserver.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSIDrivers.<name>.spec.tokenRequests.*.audience"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>expirationSeconds is the duration of validity of the token in &quot;TokenRequestSpec&quot;. It has the same default value of &quot;ExpirationSeconds&quot; in &quot;TokenRequestSpec&quot;.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.cSIDrivers.<name>.spec.tokenRequests.*.expirationSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeLifecycleModes defines what kind of volumes this CSI volume driver supports. The default if the list is empty is &quot;Persistent&quot;, which is the usage defined by the CSI specification and implemented in Kubernetes via the usual PV/PVC mechanism.</p>\n<p>The other mode is &quot;Ephemeral&quot;. In this mode, volumes are defined inline inside the pod spec with CSIVolumeSource and their lifecycle is tied to the lifecycle of that pod. A driver has to be aware of this because it is only going to get a NodePublishVolume call for such a volume.</p>\n<p>For more information about implementing this mode, see https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html A driver can support one or more of these modes and more modes may be added in the future.</p>\n<p>This field is beta. This field is immutable.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.cSIDrivers.<name>.spec.volumeLifecycleModes"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>CSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.cSINodes"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata. metadata.name must be the Kubernetes node name.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.cSINodes.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.cSINodes.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.cSINodes.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.cSINodes.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.cSINodes.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.cSINodes.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.cSINodes.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.cSINodes.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.cSINodes.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSINodes.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.cSINodes.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.cSINodes.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSINodes.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSINodes.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSINodes.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSINodes.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>spec is the specification of CSINode</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.cSINodes.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.</p>","example":null,"read_only":false,"type":"attribute set of (submodule) or list of (submodule)","name":"applications.<name>.resources.cSINodes.<name>.spec.drivers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>allocatable represents the volume resources of a node that are available for scheduling. This field is beta.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.cSINodes.<name>.spec.drivers.<name>.allocatable"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>count indicates the maximum number of unique volumes managed by the CSI driver that can be used on a node. A volume that is both attached and mounted on a node is considered to be used once, not twice. The same rule applies for a unique volume that is shared among multiple pods on the same node. If this field is not specified, then the supported number of volumes on this node is unbounded.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.cSINodes.<name>.spec.drivers.<name>.allocatable.count"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>name represents the name of the CSI driver that this object refers to. This MUST be the same name returned by the CSI GetPluginName() call for that driver.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSINodes.<name>.spec.drivers.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>nodeID of the node from the driver point of view. This field enables Kubernetes to communicate with storage systems that do not share the same nomenclature for nodes. For example, Kubernetes may refer to a given node as &quot;node1&quot;, but the storage system may refer to the same node as &quot;nodeA&quot;. When Kubernetes issues a command to the storage system to attach a volume to a specific node, it can use this field to refer to the node name using the ID that the storage system will understand, e.g. &quot;nodeA&quot; instead of &quot;node1&quot;. This field is required.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSINodes.<name>.spec.drivers.<name>.nodeID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>topologyKeys is the list of keys supported by the driver. When a driver is initialized on a cluster, it provides a set of topology keys that it understands (e.g. &quot;company.com/zone&quot;, &quot;company.com/region&quot;). When a driver is initialized on a node, it provides the same topology keys along with values. Kubelet will expose these topology keys as labels on its own node object. When Kubernetes does topology aware provisioning, it can use this list to determine which labels it should retrieve from the node object and pass back to the driver. It is possible for different nodes to use different topology keys. This can be empty if driver does not support topology.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.cSINodes.<name>.spec.drivers.<name>.topologyKeys"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>CSIStorageCapacity stores the result of one CSI GetCapacity call. For a given StorageClass, this describes the available capacity in a particular topology segment.  This can be used when considering where to instantiate new PersistentVolumes.</p>\n<p>For example this can express things like: - StorageClass &quot;standard&quot; has &quot;1234 GiB&quot; available in &quot;topology.kubernetes.io/zone=us-east1&quot; - StorageClass &quot;localssd&quot; has &quot;10 GiB&quot; available in &quot;kubernetes.io/hostname=knode-abc123&quot;</p>\n<p>The following three cases all imply that no capacity is available for a certain combination: - no object exists with suitable topology and storage class name - such an object exists, but the capacity is unset - such an object exists, but the capacity is zero</p>\n<p>The producer of these objects can decide which approach is more suitable.</p>\n<p>They are consumed by the kube-scheduler when a CSI driver opts into capacity-aware scheduling with CSIDriverSpec.StorageCapacity. The scheduler compares the MaximumVolumeSize against the requested size of pending volumes to filter out unsuitable nodes. If MaximumVolumeSize is unset, it falls back to a comparison against the less precise Capacity. If that is also unset, the scheduler assumes that capacity is insufficient and tries some other node.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.cSIStorageCapacities"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>capacity is the value reported by the CSI driver in its GetCapacityResponse for a GetCapacityRequest with topology and parameters that match the previous fields.</p>\n<p>The semantic is currently (CSI spec 1.2) defined as: The available capacity, in bytes, of the storage that can be used to provision volumes. If not set, that information is currently unavailable.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.capacity"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>maximumVolumeSize is the value reported by the CSI driver in its GetCapacityResponse for a GetCapacityRequest with topology and parameters that match the previous fields.</p>\n<p>This is defined since CSI spec 1.4.0 as the largest size that may be used in a CreateVolumeRequest.capacity_range.required_bytes field to create a volume with the same parameters as those in GetCapacityRequest. The corresponding value in the Kubernetes API is ResourceRequirements.Requests in a volume claim.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.maximumVolumeSize"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata. The name has no particular meaning. It must be a DNS subdomain (dots allowed, 253 characters). To ensure that there are no conflicts with other CSI drivers on the cluster, the recommendation is to use csisc-&lt;uuid&gt;, a generated name, or a reverse-domain name which ends with the unique CSI driver name.</p>\n<p>Objects are namespaced.</p>\n<p>More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>nodeTopology defines which nodes have access to the storage for which capacity was reported. If not set, the storage is not accessible from any node in the cluster. If empty, the storage is accessible from all nodes. This field is immutable.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.cSIStorageCapacities.<name>.nodeTopology"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.cSIStorageCapacities.<name>.nodeTopology.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSIStorageCapacities.<name>.nodeTopology.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSIStorageCapacities.<name>.nodeTopology.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.cSIStorageCapacities.<name>.nodeTopology.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.cSIStorageCapacities.<name>.nodeTopology.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storageClassName represents the name of the StorageClass that the reported capacity applies to. It must meet the same requirements as the name of a StorageClass object (non-empty, DNS subdomain). If that object no longer exists, the CSIStorageCapacity object is obsolete and should be removed by its creator. This field is immutable.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.cSIStorageCapacities.<name>.storageClassName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>CertificateSigningRequest objects provide a mechanism to obtain x509 certificates by submitting a certificate signing request, and having it asynchronously approved and issued.</p>\n<p>Kubelets use this API to obtain:</p>\n<ol>\n<li>client certificates to authenticate to kube-apiserver (with the &quot;kubernetes.io/kube-apiserver-client-kubelet&quot; signerName).</li>\n<li>serving certificates for TLS endpoints kube-apiserver can connect to securely (with the &quot;kubernetes.io/kubelet-serving&quot; signerName).</li>\n</ol>\n<p>This API can be used to request client certificates to authenticate to kube-apiserver (with the &quot;kubernetes.io/kube-apiserver-client&quot; signerName), or to obtain certificates from custom non-Kubernetes signers.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.certificateSigningRequests"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>spec contains the certificate request, and is immutable after creation. Only the request, signerName, expirationSeconds, and usages fields can be set on creation. Other fields are derived by Kubernetes and cannot be modified by users.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.certificateSigningRequests.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>expirationSeconds is the requested duration of validity of the issued certificate. The certificate signer may issue a certificate with a different validity duration so a client must check the delta between the notBefore and and notAfter fields in the issued certificate to determine the actual duration.</p>\n<p>The v1.22+ in-tree implementations of the well-known Kubernetes signers will honor this field as long as the requested duration is not greater than the maximum duration they will honor per the --cluster-signing-duration CLI flag to the Kubernetes controller manager.</p>\n<p>Certificate signers may not honor this field for various reasons:</p>\n<ol>\n<li>Old signer that is unaware of the field (such as the in-tree\nimplementations prior to v1.22)</li>\n<li>Signer whose configured maximum is shorter than the requested duration</li>\n<li>Signer whose configured minimum is longer than the requested duration</li>\n</ol>\n<p>The minimum valid value for expirationSeconds is 600, i.e. 10 minutes.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.certificateSigningRequests.<name>.spec.expirationSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>extra contains extra attributes of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.certificateSigningRequests.<name>.spec.extra"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>groups contains group membership of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.certificateSigningRequests.<name>.spec.groups"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>request contains an x509 certificate signing request encoded in a &quot;CERTIFICATE REQUEST&quot; PEM block. When serialized as JSON or YAML, the data is additionally base64-encoded.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.certificateSigningRequests.<name>.spec.request"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>signerName indicates the requested signer, and is a qualified name.</p>\n<p>List/watch requests for CertificateSigningRequests can filter on this field using a &quot;spec.signerName=NAME&quot; fieldSelector.</p>\n<p>Well-known Kubernetes signers are:</p>\n<ol>\n<li>&quot;kubernetes.io/kube-apiserver-client&quot;: issues client certificates that can be used to authenticate to kube-apiserver.\nRequests for this signer are never auto-approved by kube-controller-manager, can be issued by the &quot;csrsigning&quot; controller in kube-controller-manager.</li>\n<li>&quot;kubernetes.io/kube-apiserver-client-kubelet&quot;: issues client certificates that kubelets use to authenticate to kube-apiserver.\nRequests for this signer can be auto-approved by the &quot;csrapproving&quot; controller in kube-controller-manager, and can be issued by the &quot;csrsigning&quot; controller in kube-controller-manager.</li>\n<li>&quot;kubernetes.io/kubelet-serving&quot; issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.\nRequests for this signer are never auto-approved by kube-controller-manager, and can be issued by the &quot;csrsigning&quot; controller in kube-controller-manager.</li>\n</ol>\n<p>More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers</p>\n<p>Custom signerNames can also be specified. The signer defines:</p>\n<ol>\n<li>Trust distribution: how trust (CA bundles) are distributed.</li>\n<li>Permitted subjects: and behavior when a disallowed subject is requested.</li>\n<li>Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.</li>\n<li>Required, permitted, or forbidden key usages / extended key usages.</li>\n<li>Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.</li>\n<li>Whether or not requests for CA certificates are allowed.</li>\n</ol>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.certificateSigningRequests.<name>.spec.signerName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>uid contains the uid of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.spec.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>usages specifies a set of key usages requested in the issued certificate.</p>\n<p>Requests for TLS client certificates typically request: &quot;digital signature&quot;, &quot;key encipherment&quot;, &quot;client auth&quot;.</p>\n<p>Requests for TLS serving certificates typically request: &quot;key encipherment&quot;, &quot;digital signature&quot;, &quot;server auth&quot;.</p>\n<p>Valid values are:\n&quot;signing&quot;, &quot;digital signature&quot;, &quot;content commitment&quot;,\n&quot;key encipherment&quot;, &quot;key agreement&quot;, &quot;data encipherment&quot;,\n&quot;cert sign&quot;, &quot;crl sign&quot;, &quot;encipher only&quot;, &quot;decipher only&quot;, &quot;any&quot;,\n&quot;server auth&quot;, &quot;client auth&quot;,\n&quot;code signing&quot;, &quot;email protection&quot;, &quot;s/mime&quot;,\n&quot;ipsec end system&quot;, &quot;ipsec tunnel&quot;, &quot;ipsec user&quot;,\n&quot;timestamping&quot;, &quot;ocsp signing&quot;, &quot;microsoft sgc&quot;, &quot;netscape sgc&quot;</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.certificateSigningRequests.<name>.spec.usages"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>username contains the name of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.spec.username"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>status contains information about whether the request is approved or denied, and the certificate issued by the signer, or the failure condition indicating signer failure.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.certificateSigningRequests.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>certificate is populated with an issued certificate by the signer after an Approved condition is present. This field is set via the /status subresource. Once populated, this field is immutable.</p>\n<p>If the certificate signing request is denied, a condition of type &quot;Denied&quot; is added and this field remains empty. If the signer cannot issue the certificate, a condition of type &quot;Failed&quot; is added and this field remains empty.</p>\n<p>Validation requirements:</p>\n<ol>\n<li>certificate must contain one or more PEM blocks.</li>\n<li>All PEM blocks must have the &quot;CERTIFICATE&quot; label, contain no headers, and the encoded data\nmust be a BER-encoded ASN.1 Certificate structure as described in section 4 of RFC5280.</li>\n<li>Non-PEM content may appear before or after the &quot;CERTIFICATE&quot; PEM blocks and is unvalidated,\nto allow for explanatory text as described in section 5.2 of RFC7468.</li>\n</ol>\n<p>If more than one PEM block is present, and the definition of the requested spec.signerName does not indicate otherwise, the first block is the issued certificate, and subsequent blocks should be treated as intermediate certificates and presented in TLS handshakes.</p>\n<p>The certificate is encoded in PEM format.</p>\n<p>When serialized as JSON or YAML, the data is additionally base64-encoded, so it consists of:</p>\n<pre><code>base64(\n-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----\n)\n</code></pre>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.status.certificate"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>conditions applied to the request. Known conditions are &quot;Approved&quot;, &quot;Denied&quot;, and &quot;Failed&quot;.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.certificateSigningRequests.<name>.status.conditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>lastTransitionTime is the time the condition last transitioned from one status to another. If unset, when a new condition type is added or an existing condition's status is changed, the server defaults this to the current time.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.status.conditions.*.lastTransitionTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>lastUpdateTime is the time of the last update to this condition</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.status.conditions.*.lastUpdateTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>message contains a human readable message with details about the request state</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.status.conditions.*.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>reason indicates a brief reason for the request state</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.certificateSigningRequests.<name>.status.conditions.*.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>status of the condition, one of True, False, Unknown. Approved, Denied, and Failed conditions may not be &quot;False&quot; or &quot;Unknown&quot;.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.certificateSigningRequests.<name>.status.conditions.*.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>type of the condition. Known conditions are &quot;Approved&quot;, &quot;Denied&quot;, and &quot;Failed&quot;.</p>\n<p>An &quot;Approved&quot; condition is added via the /approval subresource, indicating the request was approved and should be issued by the signer.</p>\n<p>A &quot;Denied&quot; condition is added via the /approval subresource, indicating the request was denied and should not be issued by the signer.</p>\n<p>A &quot;Failed&quot; condition is added via the /status subresource, indicating the signer failed to issue the certificate.</p>\n<p>Approved and Denied conditions are mutually exclusive. Approved, Denied, and Failed conditions cannot be removed once added.</p>\n<p>Only one condition of a given type is allowed.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.certificateSigningRequests.<name>.status.conditions.*.type"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.clusterRoleBindings"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error. This field is immutable.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.clusterRoleBindings.<name>.roleRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIGroup is the group for the resource being referenced</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.clusterRoleBindings.<name>.roleRef.apiGroup"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is the type of resource being referenced</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.clusterRoleBindings.<name>.roleRef.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is the name of resource being referenced</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.clusterRoleBindings.<name>.roleRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subjects holds references to the objects the role applies to.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.clusterRoleBindings.<name>.subjects"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIGroup holds the API group of the referenced subject. Defaults to &quot;&quot; for ServiceAccount subjects. Defaults to &quot;rbac.authorization.k8s.io&quot; for User and Group subjects.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.subjects.<name>.apiGroup"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of object being referenced. Values defined by this API group are &quot;User&quot;, &quot;Group&quot;, and &quot;ServiceAccount&quot;. If the Authorizer does not recognized the kind value, the Authorizer should report an error.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.clusterRoleBindings.<name>.subjects.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the object being referenced.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.clusterRoleBindings.<name>.subjects.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace of the referenced object.  If the object kind is non-namespace, such as &quot;User&quot; or &quot;Group&quot;, and this value is not empty the Authorizer should report an error.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoleBindings.<name>.subjects.<name>.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.clusterRoles"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>AggregationRule is an optional field that describes how to build the Rules for this ClusterRole. If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.clusterRoles.<name>.aggregationRule"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.clusterRoles.<name>.aggregationRule.clusterRoleSelectors"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.clusterRoles.<name>.aggregationRule.clusterRoleSelectors.*.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.clusterRoles.<name>.aggregationRule.clusterRoleSelectors.*.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.clusterRoles.<name>.aggregationRule.clusterRoleSelectors.*.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.clusterRoles.<name>.aggregationRule.clusterRoleSelectors.*.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.clusterRoles.<name>.aggregationRule.clusterRoleSelectors.*.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoles.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoles.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.clusterRoles.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.clusterRoles.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoles.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.clusterRoles.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.clusterRoles.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.clusterRoles.<name>.metadata.finalizers"}]