[{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Ref is reference to another source within sources field. This field will not be used if used with a <code>source</code> tag.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.operationState.syncResult.sources.<name>.ref"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>RepoURL is the URL to the repository (Git or Helm) that contains the application manifests</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.operationState.syncResult.sources.<name>.repoURL"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.operationState.syncResult.sources.<name>.targetRevision"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ReconciledAt indicates when the application state was reconciled using the latest git version</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.reconciledAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ResourceHealthSource indicates where the resource health status is stored: inline if not set or appTree</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.resourceHealthSource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Resources is a list of Kubernetes resources managed by this application</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.resources.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.group"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>HealthStatus contains information about the currently observed health state of an application or resource</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.health"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>LastTransitionTime is the time the HealthStatus was set or updated</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.health.lastTransitionTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Message is a human-readable informational message describing the health status</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.health.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Status holds the status code of the application or resource</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.health.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.hook"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.requiresDeletionConfirmation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.requiresPruning"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SyncStatusCode is a type which represents possible comparison results</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.syncWave"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.resources.<name>.version"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SourceHydrator stores information about the current state of source hydration</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>CurrentOperation holds the status of the hydrate operation</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>DrySHA holds the resolved revision (sha) of the dry source as of the most recent reconciliation</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.drySHA"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>FinishedAt indicates when the hydrate operation finished</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.finishedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>HydratedSHA holds the resolved revision (sha) of the hydrated source as of the most recent reconciliation</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.hydratedSHA"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Message contains a message describing the current status of the hydrate operation</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Phase indicates the status of the hydrate operation</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.phase"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SourceHydrator holds the hydrator config used for the hydrate operation</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.sourceHydrator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>DrySource specifies where the dry &quot;don't repeat yourself&quot; manifest source lives.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.sourceHydrator.drySource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Path is a directory path within the Git repository where the manifests are located</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.sourceHydrator.drySource.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>RepoURL is the URL to the git repository that contains the application manifests</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.sourceHydrator.drySource.repoURL"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>TargetRevision defines the revision of the source to hydrate</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.sourceHydrator.drySource.targetRevision"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>HydrateTo specifies an optional &quot;staging&quot; location to push hydrated manifests to. An external system would then\nhave to move manifests to the SyncSource, e.g. by pull request.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.sourceHydrator.hydrateTo"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>TargetBranch is the branch to which hydrated manifests should be committed</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.sourceHydrator.hydrateTo.targetBranch"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SyncSource specifies where to sync hydrated manifests from.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.sourceHydrator.syncSource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.sourceHydrator.syncSource.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>TargetBranch is the branch to which hydrated manifests should be committed</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.sourceHydrator.syncSource.targetBranch"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>StartedAt indicates when the hydrate operation started</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.currentOperation.startedAt"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>LastSuccessfulOperation holds info about the most recent successful hydration</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>DrySHA holds the resolved revision (sha) of the dry source as of the most recent reconciliation</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation.drySHA"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>HydratedSHA holds the resolved revision (sha) of the hydrated source as of the most recent reconciliation</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation.hydratedSHA"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SourceHydrator holds the hydrator config used for the hydrate operation</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation.sourceHydrator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>DrySource specifies where the dry &quot;don't repeat yourself&quot; manifest source lives.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation.sourceHydrator.drySource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Path is a directory path within the Git repository where the manifests are located</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation.sourceHydrator.drySource.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>RepoURL is the URL to the git repository that contains the application manifests</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation.sourceHydrator.drySource.repoURL"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>TargetRevision defines the revision of the source to hydrate</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation.sourceHydrator.drySource.targetRevision"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>HydrateTo specifies an optional &quot;staging&quot; location to push hydrated manifests to. An external system would then\nhave to move manifests to the SyncSource, e.g. by pull request.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation.sourceHydrator.hydrateTo"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>TargetBranch is the branch to which hydrated manifests should be committed</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation.sourceHydrator.hydrateTo.targetBranch"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SyncSource specifies where to sync hydrated manifests from.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation.sourceHydrator.syncSource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Path is a directory path within the git repository where hydrated manifests should be committed to and synced\nfrom. If hydrateTo is set, this is just the path from which hydrated manifests will be synced.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation.sourceHydrator.syncSource.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>TargetBranch is the branch to which hydrated manifests should be committed</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sourceHydrator.lastSuccessfulOperation.sourceHydrator.syncSource.targetBranch"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SourceType specifies the type of this application</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sourceType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SourceTypes specifies the type of the sources included in the application</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sourceTypes"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Summary contains a list of URLs and container images used by this application</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.summary"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ExternalURLs holds all external URLs of application child resources.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.summary.externalURLs"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Images holds all images of application child resources.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.summary.images"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Sync contains information about the application's current sync status</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ComparedTo contains information about what has been compared</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Destination is a reference to the application's destination used for comparison</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.destination"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.destination.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.destination.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.destination.server"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>IgnoreDifferences is a reference to the application's ignored differences used for comparison</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.ignoreDifferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.ignoreDifferences.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.ignoreDifferences.<name>.group"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.ignoreDifferences.<name>.jqPathExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.ignoreDifferences.<name>.jsonPointers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.ignoreDifferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.ignoreDifferences.<name>.managedFieldsManagers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.ignoreDifferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.ignoreDifferences.<name>.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Source is a reference to the application's source used for comparison</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.chart"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Directory holds path/directory specific options</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.exclude"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Include contains a glob pattern to match paths against that should be explicitly included during manifest generation</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.include"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Jsonnet holds options specific to Jsonnet</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.jsonnet"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ExtVars is a list of Jsonnet External Variables</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.jsonnet.extVars"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.jsonnet.extVars.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.jsonnet.extVars.<name>.code"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.jsonnet.extVars.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.jsonnet.extVars.<name>.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Additional library search dirs</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.jsonnet.libs"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>TLAS is a list of Jsonnet Top-level Arguments</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.jsonnet.tlas"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.jsonnet.tlas.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.jsonnet.tlas.<name>.code"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.jsonnet.tlas.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.jsonnet.tlas.<name>.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Recurse specifies whether to scan a directory recursively for manifests</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.directory.recurse"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Helm holds helm specific options</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.apiVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>FileParameters are file parameters to the helm template</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.fileParameters"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.fileParameters.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name is the name of the Helm parameter</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.fileParameters.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Path is the path to the file containing the values for the Helm parameter</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.fileParameters.<name>.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.ignoreMissingValueFiles"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.kubeVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.parameters"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.parameters.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ForceString determines whether to tell Helm to interpret booleans and numbers as strings</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.parameters.<name>.forceString"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name is the name of the Helm parameter</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.parameters.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Value is the value for the Helm parameter</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.parameters.<name>.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>PassCredentials pass credentials to all domains (Helm's --pass-credentials)</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.passCredentials"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ReleaseName is the Helm release name to use. If omitted it will use the application name</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.releaseName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SkipCrds skips custom resource definition installation step (Helm's --skip-crds)</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.skipCrds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.skipSchemaValidation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SkipTests skips test manifest installation step (Helm's --skip-tests).</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.skipTests"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ValuesFiles is a list of Helm value files to use when generating a template</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.valueFiles"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.</p>","example":null,"read_only":false,"type":"null or (attribute set)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.valuesObject"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Version is the Helm version to use for templating (&quot;3&quot;)</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.helm.version"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Kustomize holds kustomize specific options</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.apiVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>CommonAnnotations is a list of additional annotations to add to rendered manifests</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.commonAnnotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.commonAnnotationsEnvsubst"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>CommonLabels is a list of additional labels to add to rendered manifests</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.commonLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Components specifies a list of kustomize components to add to the kustomization before building</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.components"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.forceCommonAnnotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.forceCommonLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Images is a list of Kustomize image override specifications</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.images"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.kubeVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>LabelWithoutSelector specifies whether to apply common labels to resource selectors or not</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.labelWithoutSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>NamePrefix is a prefix appended to resources for Kustomize apps</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.namePrefix"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>NameSuffix is a suffix appended to resources for Kustomize apps</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.nameSuffix"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Namespace sets the namespace that Kustomize adds to all resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Patches is a list of Kustomize patches</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.patches"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (attribute set of boolean)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.patches.*.options"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.patches.*.patch"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.patches.*.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.patches.*.target"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.patches.*.target.annotationSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.patches.*.target.group"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.patches.*.target.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.patches.*.target.labelSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.patches.*.target.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.patches.*.target.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.patches.*.target.version"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Replicas is a list of Kustomize Replicas override specifications</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.replicas"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.replicas.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Number of replicas</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.replicas.<name>.count"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name of Deployment or StatefulSet</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.replicas.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Version controls which version of Kustomize to use for rendering manifests</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.kustomize.version"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Path is a directory path within the Git repository, and is only valid for applications sourced from Git.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Plugin holds config management plugin specific options</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.plugin"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Env is a list of environment variable entries</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.plugin.env"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.plugin.env.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name is the name of the variable, usually expressed in uppercase</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.plugin.env.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Value is the value of the variable</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.plugin.env.<name>.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.plugin.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.plugin.parameters"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.plugin.parameters.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Array is the value of an array type parameter.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.plugin.parameters.<name>.array"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Map is the value of a map type parameter.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.plugin.parameters.<name>.map"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name is the name identifying a parameter.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.plugin.parameters.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>String_ is the value of a string type parameter.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.plugin.parameters.<name>.string"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Ref is reference to another source within sources field. This field will not be used if used with a <code>source</code> tag.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.ref"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>RepoURL is the URL to the repository (Git or Helm) that contains the application manifests</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.repoURL"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.source.targetRevision"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Sources is a reference to the application's multiple sources used for comparison</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.chart"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Directory holds path/directory specific options</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.exclude"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Include contains a glob pattern to match paths against that should be explicitly included during manifest generation</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.include"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Jsonnet holds options specific to Jsonnet</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.jsonnet"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ExtVars is a list of Jsonnet External Variables</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.jsonnet.extVars"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.jsonnet.extVars.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.jsonnet.extVars.<name>.code"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.jsonnet.extVars.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.jsonnet.extVars.<name>.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Additional library search dirs</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.jsonnet.libs"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>TLAS is a list of Jsonnet Top-level Arguments</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.jsonnet.tlas"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.jsonnet.tlas.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.jsonnet.tlas.<name>.code"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.jsonnet.tlas.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.jsonnet.tlas.<name>.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Recurse specifies whether to scan a directory recursively for manifests</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.directory.recurse"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Helm holds helm specific options</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.apiVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>FileParameters are file parameters to the helm template</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.fileParameters"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.fileParameters.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name is the name of the Helm parameter</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.fileParameters.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Path is the path to the file containing the values for the Helm parameter</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.fileParameters.<name>.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.ignoreMissingValueFiles"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.kubeVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.parameters"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.parameters.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ForceString determines whether to tell Helm to interpret booleans and numbers as strings</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.parameters.<name>.forceString"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name is the name of the Helm parameter</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.parameters.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Value is the value for the Helm parameter</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.parameters.<name>.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>PassCredentials pass credentials to all domains (Helm's --pass-credentials)</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.passCredentials"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ReleaseName is the Helm release name to use. If omitted it will use the application name</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.releaseName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SkipCrds skips custom resource definition installation step (Helm's --skip-crds)</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.skipCrds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.skipSchemaValidation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>SkipTests skips test manifest installation step (Helm's --skip-tests).</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.skipTests"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ValuesFiles is a list of Helm value files to use when generating a template</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.valueFiles"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.</p>","example":null,"read_only":false,"type":"null or (attribute set)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.valuesObject"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Version is the Helm version to use for templating (&quot;3&quot;)</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.helm.version"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Kustomize holds kustomize specific options</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.apiVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>CommonAnnotations is a list of additional annotations to add to rendered manifests</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.commonAnnotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.commonAnnotationsEnvsubst"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>CommonLabels is a list of additional labels to add to rendered manifests</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.commonLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Components specifies a list of kustomize components to add to the kustomization before building</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.components"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.forceCommonAnnotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.forceCommonLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Images is a list of Kustomize image override specifications</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.images"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.kubeVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>LabelWithoutSelector specifies whether to apply common labels to resource selectors or not</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.labelWithoutSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>NamePrefix is a prefix appended to resources for Kustomize apps</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.namePrefix"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>NameSuffix is a suffix appended to resources for Kustomize apps</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.nameSuffix"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Namespace sets the namespace that Kustomize adds to all resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Patches is a list of Kustomize patches</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.patches"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (attribute set of boolean)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.patches.*.options"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.patches.*.patch"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.patches.*.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.patches.*.target"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.patches.*.target.annotationSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.patches.*.target.group"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.patches.*.target.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.patches.*.target.labelSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.patches.*.target.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.patches.*.target.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.patches.*.target.version"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Replicas is a list of Kustomize Replicas override specifications</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.replicas"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.replicas.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Number of replicas</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.replicas.<name>.count"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name of Deployment or StatefulSet</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.replicas.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Version controls which version of Kustomize to use for rendering manifests</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.kustomize.version"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Path is a directory path within the Git repository, and is only valid for applications sourced from Git.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Plugin holds config management plugin specific options</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.plugin"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Env is a list of environment variable entries</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.plugin.env"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.plugin.env.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name is the name of the variable, usually expressed in uppercase</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.plugin.env.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Value is the value of the variable</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.plugin.env.<name>.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.plugin.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.plugin.parameters"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.plugin.parameters.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Array is the value of an array type parameter.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.plugin.parameters.<name>.array"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Map is the value of a map type parameter.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.plugin.parameters.<name>.map"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Name is the name identifying a parameter.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.plugin.parameters.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>String_ is the value of a string type parameter.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.plugin.parameters.<name>.string"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Ref is reference to another source within sources field. This field will not be used if used with a <code>source</code> tag.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.ref"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>RepoURL is the URL to the repository (Git or Helm) that contains the application manifests</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.repoURL"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.comparedTo.sources.<name>.targetRevision"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Revision contains information about the revision the comparison has been performed to</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.applications.<name>.status.sync.revision"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Revisions contains information about the revisions of multiple sources the comparison has been performed to</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.applications.<name>.status.sync.revisions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/argocd.nix"],"default":null,"description":"<p>Status is the sync state of the comparison</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.applications.<name>.status.sync.status"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.apps.v1.ControllerRevision"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.apiVersion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Data is the serialized representation of the state.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.data"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.kind"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.annotations"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.finalizers"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.generateName"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.generation"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.labels"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.managedFields"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.name"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.namespace"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.ownerReferences.<name>._priority"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.selfLink"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.metadata.uid"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Revision indicates the revision of the state represented by Data.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.apps.v1.ControllerRevision.<name>.revision"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>DaemonSet represents the configuration of a daemon set.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.apiVersion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.kind"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.annotations"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.finalizers"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.generateName"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.generation"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.labels"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.managedFields"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.name"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.namespace"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.ownerReferences.<name>._priority"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.selfLink"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.metadata.uid"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The desired behavior of this daemon set. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.minReadySeconds"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.revisionHistoryLimit"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A label query over pods that are managed by the daemon set. Must match in order to be controlled. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.selector"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.selector.matchExpressions"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.selector.matchExpressions.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.selector.matchExpressions.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.selector.matchExpressions.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.selector.matchLabels"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). The only allowed template.spec.restartPolicy value is &quot;Always&quot;. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.annotations"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.creationTimestamp"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.deletionTimestamp"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.finalizers"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.generateName"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.generation"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.labels"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.managedFields"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.managedFields.*.manager"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.managedFields.*.operation"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.managedFields.*.time"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.name"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.namespace"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.ownerReferences"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.ownerReferences.<name>._priority"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.resourceVersion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.selfLink"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.metadata.uid"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.activeDeadlineSeconds"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>If specified, the pod's scheduling constraints</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Describes node affinity scheduling rules for the pod.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &quot;weight&quot; to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A node selector term, associated with the corresponding weight.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A list of node selector requirements by node's labels.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchExpressions"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchExpressions.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchExpressions.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchExpressions.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A list of node selector requirements by node's fields.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchFields"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchFields.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchFields.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.preference.matchFields.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.weight"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Required. A list of node selector terms. The terms are ORed.</p>","example":null,"read_only":false,"type":"list of (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A list of node selector requirements by node's labels.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchExpressions"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchExpressions.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchExpressions.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchExpressions.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A list of node selector requirements by node's fields.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchFields"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchFields.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchFields.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.*.matchFields.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &quot;weight&quot; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Required. A pod affinity term, associated with the corresponding weight.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchLabels"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.matchLabelKeys"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.mismatchLabelKeys"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means &quot;this pod's namespace&quot;. An empty selector ({}) matches all namespaces.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchLabels"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means &quot;this pod's namespace&quot;.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaces"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.topologyKey"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.weight"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchLabels"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.matchLabelKeys"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.mismatchLabelKeys"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means &quot;this pod's namespace&quot;. An empty selector ({}) matches all namespaces.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchLabels"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means &quot;this pod's namespace&quot;.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaces"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.topologyKey"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding &quot;weight&quot; to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Required. A pod affinity term, associated with the corresponding weight.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchExpressions.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.labelSelector.matchLabels"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.matchLabelKeys"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.mismatchLabelKeys"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means &quot;this pod's namespace&quot;. An empty selector ({}) matches all namespaces.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaceSelector.matchLabels"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means &quot;this pod's namespace&quot;.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.namespaces"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.podAffinityTerm.topologyKey"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.*.weight"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchExpressions.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.labelSelector.matchLabels"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key in (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both matchLabelKeys and labelSelector. Also, matchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.matchLabelKeys"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with <code>labelSelector</code> as <code>key notin (value)</code> to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both mismatchLabelKeys and labelSelector. Also, mismatchLabelKeys cannot be set when labelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.mismatchLabelKeys"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means &quot;this pod's namespace&quot;. An empty selector ({}) matches all namespaces.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaceSelector.matchLabels"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means &quot;this pod's namespace&quot;.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.namespaces"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.*.topologyKey"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.automountServiceAccountToken"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.</p>","example":null,"read_only":false,"type":"attribute set of (submodule) or list of (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>._priority"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. &quot;$$(VAR_NAME)&quot; will produce the string literal &quot;$(VAR_NAME)&quot;. Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.args"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. &quot;$$(VAR_NAME)&quot; will produce the string literal &quot;$(VAR_NAME)&quot;. Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.command"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>List of environment variables to set in the container. Cannot be updated.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>._priority"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Name of the environment variable. Must be a C_IDENTIFIER.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.name"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. &quot;$$(VAR_NAME)&quot; will produce the string literal &quot;$(VAR_NAME)&quot;. Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to &quot;&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.value"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Source for the environment variable's value. Cannot be used if value is not empty.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Selects a key of a ConfigMap.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.configMapKeyRef"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The key to select.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.configMapKeyRef.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.configMapKeyRef.name"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Specify whether the ConfigMap or its key must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.configMapKeyRef.optional"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Selects a field of the pod: supports metadata.name, metadata.namespace, <code>metadata.labels['&lt;KEY&gt;']</code>, <code>metadata.annotations['&lt;KEY&gt;']</code>, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.fieldRef"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Version of the schema the FieldPath is written in terms of, defaults to &quot;v1&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.fieldRef.apiVersion"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Path of the field to select in the specified API version.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.fieldRef.fieldPath"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.resourceFieldRef"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Container name: required for volumes, optional for env vars</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.resourceFieldRef.containerName"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Specifies the output format of the exposed resources, defaults to &quot;1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.resourceFieldRef.divisor"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Required: resource to select</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.resourceFieldRef.resource"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Selects a key of a secret in the pod's namespace</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.secretKeyRef"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The key of the secret to select from.  Must be a valid secret key.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.secretKeyRef.key"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.secretKeyRef.name"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Specify whether the Secret or its key must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.env.<name>.valueFrom.secretKeyRef.optional"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.envFrom"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The ConfigMap to select from</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.envFrom.*.configMapRef"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.envFrom.*.configMapRef.name"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Specify whether the ConfigMap must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.envFrom.*.configMapRef.optional"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.envFrom.*.prefix"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>The Secret to select from</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.envFrom.*.secretRef"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.envFrom.*.secretRef.name"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Specify whether the Secret must be defined</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.envFrom.*.secretRef.optional"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.image"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.imagePullPolicy"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Actions that the management system should take in response to container lifecycle events. Cannot be updated.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.lifecycle"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.lifecycle.postStart"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Exec specifies the action to take.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.exec"},{"declarations":["https://github.com/hall/kubenix/blob/main/modules/generated/v1.30.nix"],"default":null,"description":"<p>Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.apps.v1.DaemonSet.<name>.spec.template.spec.containers.<name>.lifecycle.postStart.exec.command"}]