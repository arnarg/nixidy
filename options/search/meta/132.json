[{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.namespaces.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.namespaces.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.namespaces.<name>.metadata.ownerReferences.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.namespaces.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.namespaces.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.namespaces.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.namespaces.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.namespaces.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.namespaces.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Spec defines the behavior of the Namespace. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.namespaces.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.namespaces.<name>.spec.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Status describes the current status of a Namespace. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.namespaces.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Represents the latest available observations of a namespace's current state.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.namespaces.<name>.status.conditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.namespaces.<name>.status.conditions.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Last time the condition transitioned from one status to another.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.status.conditions.<name>.lastTransitionTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Human-readable message indicating details about last transition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.status.conditions.<name>.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Unique, one-word, CamelCase reason for the condition's last transition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.status.conditions.<name>.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Status of the condition, one of True, False, Unknown.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.namespaces.<name>.status.conditions.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Type of namespace controller condition.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.namespaces.<name>.status.conditions.<name>.type"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.namespaces.<name>.status.phase"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>NetworkPolicy describes what network traffic is allowed for a set of Pods</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.networkPolicies"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.networkPolicies.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.networkPolicies.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.networkPolicies.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.networkPolicies.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.networkPolicies.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.networkPolicies.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.networkPolicies.<name>.metadata.ownerReferences.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.networkPolicies.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.networkPolicies.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>spec represents the specification of the desired behavior for this NetworkPolicy.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.networkPolicies.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>egress is a list of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ports is a list of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.ports"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>endPort indicates that the range of ports from port to endPort if set, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.ports.*.endPort"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>port represents the port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.</p>","example":null,"read_only":false,"type":"null or signed integer or (string)","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.ports.*.port"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.ports.*.protocol"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>to is a list of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ipBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.ipBlock"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>cidr is a string representing the IPBlock Valid examples are &quot;192.168.1.0/24&quot; or &quot;2001:db8::/64&quot;</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.ipBlock.cidr"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>except is a slice of CIDRs that should not be included within an IPBlock Valid examples are &quot;192.168.1.0/24&quot; or &quot;2001:db8::/64&quot; Except values will be rejected if they are outside the cidr range</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.ipBlock.except"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>namespaceSelector selects namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.</p>\n<p>If podSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the namespaces selected by namespaceSelector. Otherwise it selects all pods in the namespaces selected by namespaceSelector.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.namespaceSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.namespaceSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>podSelector is a label selector which selects pods. This field follows standard label selector semantics; if present but empty, it selects all pods.</p>\n<p>If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the pods matching podSelector in the policy's own namespace.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.podSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.podSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.podSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.podSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.podSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.egress.*.to.*.podSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ingress is a list of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>from is a list of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ipBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.ipBlock"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>cidr is a string representing the IPBlock Valid examples are &quot;192.168.1.0/24&quot; or &quot;2001:db8::/64&quot;</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.ipBlock.cidr"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>except is a slice of CIDRs that should not be included within an IPBlock Valid examples are &quot;192.168.1.0/24&quot; or &quot;2001:db8::/64&quot; Except values will be rejected if they are outside the cidr range</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.ipBlock.except"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>namespaceSelector selects namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.</p>\n<p>If podSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the namespaces selected by namespaceSelector. Otherwise it selects all pods in the namespaces selected by namespaceSelector.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.namespaceSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.namespaceSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>podSelector is a label selector which selects pods. This field follows standard label selector semantics; if present but empty, it selects all pods.</p>\n<p>If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the pods matching podSelector in the policy's own namespace.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.podSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.podSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.podSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.podSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.podSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.from.*.podSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ports is a list of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.ports"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>endPort indicates that the range of ports from port to endPort if set, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.ports.*.endPort"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>port represents the port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.</p>","example":null,"read_only":false,"type":"null or signed integer or (string)","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.ports.*.port"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.networkPolicies.<name>.spec.ingress.*.ports.*.protocol"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>podSelector selects the pods to which this NetworkPolicy object applies. The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.networkPolicies.<name>.spec.podSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.networkPolicies.<name>.spec.podSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.spec.podSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.networkPolicies.<name>.spec.podSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.podSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.podSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>policyTypes is a list of rule types that the NetworkPolicy relates to. Valid options are [&quot;Ingress&quot;], [&quot;Egress&quot;], or [&quot;Ingress&quot;, &quot;Egress&quot;]. If this field is not specified, it will default based on the existence of ingress or egress rules; policies that contain an egress section are assumed to affect egress, and all policies (whether or not they contain an ingress section) are assumed to affect ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ &quot;Egress&quot; ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include &quot;Egress&quot; (since such a policy would not include an egress section and would otherwise default to just [ &quot;Ingress&quot; ]). This field is beta-level in 1.8</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.networkPolicies.<name>.spec.policyTypes"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.nodes"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.nodes.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.nodes.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.nodes.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.nodes.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.nodes.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.nodes.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.nodes.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.nodes.<name>.metadata.ownerReferences.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.nodes.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.nodes.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Spec defines the behavior of a node. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: Previously used to specify the source of the node's configuration for the DynamicKubeletConfig feature. This feature is removed.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.spec.configSource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ConfigMap is a reference to a Node's ConfigMap</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.spec.configSource.configMap"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.spec.configSource.configMap.kubeletConfigKey"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.spec.configSource.configMap.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.spec.configSource.configMap.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.spec.configSource.configMap.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.spec.configSource.configMap.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.spec.externalID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>PodCIDR represents the pod IP range assigned to the node.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.spec.podCIDR"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.nodes.<name>.spec.podCIDRs"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ID of the node assigned by the cloud provider in the format: &lt;ProviderName&gt;://&lt;ProviderSpecificNodeID&gt;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.spec.providerID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If specified, the node's taints.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.nodes.<name>.spec.taints"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.spec.taints.*.effect"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Required. The taint key to be applied to a node.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.spec.taints.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.spec.taints.*.timeAdded"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The taint value corresponding to the taint key.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.spec.taints.*.value"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.nodes.<name>.spec.unschedulable"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Most recently observed status of the node. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/reference/node/node-status/#addresses Note: This field is declared as mergeable, but the merge key is not sufficiently unique, which can cause data corruption when it is merged. Callers should instead use a full-replacement patch. See https://pr.k8s.io/79391 for an example. Consumers should assume that addresses can change during the lifetime of a Node. However, there are some exceptions where this may not be possible, such as Pods that inherit a Node's address in its own status or consumers of the downward API (status.hostIP).</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.nodes.<name>.status.addresses"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.nodes.<name>.status.addresses.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The node address.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.addresses.<name>.address"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Node address type, one of Hostname, ExternalIP or InternalIP.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.addresses.<name>.type"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.nodes.<name>.status.allocatable"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Capacity represents the total resources of a node. More info: https://kubernetes.io/docs/reference/node/node-status/#capacity</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.nodes.<name>.status.capacity"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Conditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/reference/node/node-status/#condition</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.nodes.<name>.status.conditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.nodes.<name>.status.conditions.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Last time we got an update on a given condition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.conditions.<name>.lastHeartbeatTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Last time the condition transit from one status to another.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.conditions.<name>.lastTransitionTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Human readable message indicating details about last transition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.conditions.<name>.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>(brief) reason for the condition's last transition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.conditions.<name>.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Status of the condition, one of True, False, Unknown.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.conditions.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Type of node condition.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.conditions.<name>.type"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Status of the config assigned to the node via the dynamic Kubelet config feature.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.config"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Active reports the checkpointed config the node is actively using. Active will represent either the current version of the Assigned config, or the current LastKnownGood config, depending on whether attempting to use the Assigned config results in an error.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.config.active"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ConfigMap is a reference to a Node's ConfigMap</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.config.active.configMap"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.config.active.configMap.kubeletConfigKey"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.config.active.configMap.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.config.active.configMap.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.config.active.configMap.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.config.active.configMap.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Assigned reports the checkpointed config the node will try to use. When Node.Spec.ConfigSource is updated, the node checkpoints the associated config payload to local disk, along with a record indicating intended config. The node refers to this record to choose its config checkpoint, and reports this record in Assigned. Assigned only updates in the status after the record has been checkpointed to disk. When the Kubelet is restarted, it tries to make the Assigned config the Active config by loading and validating the checkpointed payload identified by Assigned.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.config.assigned"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ConfigMap is a reference to a Node's ConfigMap</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.config.assigned.configMap"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.config.assigned.configMap.kubeletConfigKey"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.config.assigned.configMap.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.config.assigned.configMap.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.config.assigned.configMap.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.config.assigned.configMap.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.config.error"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>LastKnownGood reports the checkpointed config the node will fall back to when it encounters an error attempting to use the Assigned config. The Assigned config becomes the LastKnownGood config when the node determines that the Assigned config is stable and correct. This is currently implemented as a 10-minute soak period starting when the local record of Assigned config is updated. If the Assigned config is Active at the end of this period, it becomes the LastKnownGood. Note that if Spec.ConfigSource is reset to nil (use local defaults), the LastKnownGood is also immediately reset to nil, because the local default config is always assumed good. You should not make assumptions about the node's method of determining config stability and correctness, as this may change or become configurable in the future.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.config.lastKnownGood"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ConfigMap is a reference to a Node's ConfigMap</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.config.lastKnownGood.configMap"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.config.lastKnownGood.configMap.kubeletConfigKey"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.config.lastKnownGood.configMap.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.config.lastKnownGood.configMap.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.config.lastKnownGood.configMap.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.config.lastKnownGood.configMap.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Endpoints of daemons running on the Node.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.daemonEndpoints"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Endpoint on which Kubelet is listening.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.daemonEndpoints.kubeletEndpoint"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Port number of the given endpoint.</p>","example":null,"read_only":false,"type":"signed integer","name":"applications.<name>.resources.nodes.<name>.status.daemonEndpoints.kubeletEndpoint.Port"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Features describes the set of features implemented by the CRI implementation.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.features"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>SupplementalGroupsPolicy is set to true if the runtime supports SupplementalGroupsPolicy and ContainerUser.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.nodes.<name>.status.features.supplementalGroupsPolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of container images on this node</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.nodes.<name>.status.images"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Names by which this image is known. e.g. [&quot;kubernetes.example/hyperkube:v1.0.7&quot;, &quot;cloud-vendor.registry.example/cloud-vendor/hyperkube:v1.0.7&quot;]</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.nodes.<name>.status.images.*.names"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The size of the image in bytes.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.nodes.<name>.status.images.*.sizeBytes"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/reference/node/node-status/#info</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The Architecture reported by the node</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo.architecture"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Boot ID reported by the node.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo.bootID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo.containerRuntimeVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo.kernelVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: KubeProxy Version reported by the node.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo.kubeProxyVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kubelet Version reported by the node.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo.kubeletVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo.machineID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The Operating System reported by the node</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo.operatingSystem"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo.osImage"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Swap Info reported by the node.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo.swap"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Total amount of swap memory in bytes.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo.swap.capacity"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.nodeInfo.systemUUID"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>NodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.phase"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The available runtime handlers.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.nodes.<name>.status.runtimeHandlers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.nodes.<name>.status.runtimeHandlers.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Supported features.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.nodes.<name>.status.runtimeHandlers.<name>.features"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>RecursiveReadOnlyMounts is set to true if the runtime handler supports RecursiveReadOnlyMounts.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.nodes.<name>.status.runtimeHandlers.<name>.features.recursiveReadOnlyMounts"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UserNamespaces is set to true if the runtime handler supports UserNamespaces, including for volumes.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.nodes.<name>.status.runtimeHandlers.<name>.features.userNamespaces"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Runtime handler name. Empty for the default runtime handler.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.nodes.<name>.status.runtimeHandlers.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of volumes that are attached to the node.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.nodes.<name>.status.volumesAttached"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.nodes.<name>.status.volumesAttached.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DevicePath represents the device path where the volume should be available</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.volumesAttached.<name>.devicePath"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the attached volume</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.nodes.<name>.status.volumesAttached.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of attachable volumes in use (mounted) by the node.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.nodes.<name>.status.volumesInUse"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>PersistentVolumeClaim is a user's request for and claim to a persistent volume</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.persistentVolumeClaims"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.ownerReferences.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.accessModes"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.dataSource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.dataSource.apiGroup"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is the type of resource being referenced</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.dataSource.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is the name of resource being referenced</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.dataSource.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef\nallows any non-core object, as well as PersistentVolumeClaim objects.</p>\n<ul>\n<li>While dataSource ignores disallowed values (dropping them), dataSourceRef\npreserves all values, and generates an error if a disallowed value is\nspecified.</li>\n<li>While dataSource only allows local objects, dataSourceRef allows objects\nin any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</li>\n</ul>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.dataSourceRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.dataSourceRef.apiGroup"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is the type of resource being referenced</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.dataSourceRef.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is the name of resource being referenced</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.dataSourceRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.dataSourceRef.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.resources.limits"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.resources.requests"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>selector is a label query over volumes to consider for binding.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.selector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.selector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.selector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.selector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.selector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.selector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.storageClassName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.volumeAttributesClassName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.volumeMode"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>volumeName is the binding reference to the PersistentVolume backing this claim.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.spec.volumeName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.status.accessModes"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>allocatedResourceStatuses stores status of resource being resized for the given PVC. Key names follow standard Kubernetes label syntax. Valid values are either:\n* Un-prefixed keys:\n- storage - the capacity of the volume.\n* Custom resources must use implementation-defined prefixed names such as &quot;example.com/my-custom-resource&quot;\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.</p>\n<p>ClaimResourceStatus can be in any of following states:\n- ControllerResizeInProgress:\nState set when resize controller starts resizing the volume in control-plane.\n- ControllerResizeFailed:\nState set when resize has failed in resize controller with a terminal error.\n- NodeResizePending:\nState set when resize controller has finished resizing the volume but further resizing of\nvolume is needed on the node.\n- NodeResizeInProgress:\nState set when kubelet starts resizing the volume.\n- NodeResizeFailed:\nState set when resizing has failed in kubelet with a terminal error. Transient errors don't set\nNodeResizeFailed.\nFor example: if expanding a PVC for more capacity - this field can be one of the following states:\n- pvc.status.allocatedResourceStatus['storage'] = &quot;ControllerResizeInProgress&quot;\n- pvc.status.allocatedResourceStatus['storage'] = &quot;ControllerResizeFailed&quot;\n- pvc.status.allocatedResourceStatus['storage'] = &quot;NodeResizePending&quot;\n- pvc.status.allocatedResourceStatus['storage'] = &quot;NodeResizeInProgress&quot;\n- pvc.status.allocatedResourceStatus['storage'] = &quot;NodeResizeFailed&quot;\nWhen this field is not set, it means that no resize operation is in progress for the given PVC.</p>\n<p>A controller that receives PVC update with previously unknown resourceName or ClaimResourceStatus should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.</p>\n<p>This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.status.allocatedResourceStatuses"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>allocatedResources tracks the resources allocated to a PVC including its capacity. Key names follow standard Kubernetes label syntax. Valid values are either:\n* Un-prefixed keys:\n- storage - the capacity of the volume.\n* Custom resources must use implementation-defined prefixed names such as &quot;example.com/my-custom-resource&quot;\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.</p>\n<p>Capacity reported here may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity.</p>\n<p>A controller that receives PVC update with previously unknown resourceName should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.</p>\n<p>This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.status.allocatedResources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>capacity represents the actual resources of the underlying volume.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.status.capacity"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'Resizing'.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.persistentVolumeClaims.<name>.status.conditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.persistentVolumeClaims.<name>.status.conditions.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>lastProbeTime is the time we probed the condition.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.persistentVolumeClaims.<name>.status.conditions.<name>.lastProbeTime"}]