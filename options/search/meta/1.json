[{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Webhooks is a list of webhooks and the affected resources and operations.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>AdmissionReviewVersions is an ordered list of preferred <code>AdmissionReview</code> versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.</p>","example":null,"read_only":false,"type":"list of (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.admissionReviewVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ClientConfig defines how to communicate with the hook. Required</p>","example":null,"read_only":false,"type":"submodule","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.clientConfig"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p><code>caBundle</code> is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.clientConfig.caBundle"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p><code>service</code> is a reference to the service for this webhook. Either <code>service</code> or <code>url</code> must be specified.</p>\n<p>If the webhook is running within the cluster, then you should use <code>service</code>.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.clientConfig.service"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p><code>name</code> is the name of the service. Required</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.clientConfig.service.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p><code>namespace</code> is the namespace of the service. Required</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.clientConfig.service.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p><code>path</code> is an optional URL path which will be sent in any request to this service.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.clientConfig.service.path"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. <code>port</code> should be a valid port number (1-65535, inclusive).</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.clientConfig.service.port"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p><code>url</code> gives the location of the webhook, in standard URL form (<code>scheme://host:port/path</code>). Exactly one of <code>url</code> or <code>service</code> must be specified.</p>\n<p>The <code>host</code> should not refer to a service running in the cluster; use the <code>service</code> field instead. The host might be resolved via external DNS in some apiservers (e.g., <code>kube-apiserver</code> cannot resolve in-cluster DNS as that would be a layering violation). <code>host</code> may also be an IP address.</p>\n<p>Please note that using <code>localhost</code> or <code>127.0.0.1</code> as a <code>host</code> is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.</p>\n<p>The scheme must be &quot;https&quot;; the URL must begin with &quot;https://&quot;.</p>\n<p>A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.</p>\n<p>Attempting to use a user or basic auth e.g. &quot;user:password@&quot; is not allowed. Fragments (&quot;#...&quot;) and query parameters (&quot;?...&quot;) are not allowed, either.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.clientConfig.url"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.failurePolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MatchConditions is a list of conditions that must be met for a request to be sent to this webhook. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.</p>\n<p>The exact matching logic is (in order):</p>\n<ol>\n<li>If ANY matchCondition evaluates to FALSE, the webhook is skipped.</li>\n<li>If ALL matchConditions evaluate to TRUE, the webhook is called.</li>\n<li>If any matchCondition evaluates to an error (but none are FALSE):\n<ul>\n<li>If failurePolicy=Fail, reject the request</li>\n<li>If failurePolicy=Ignore, the error is ignored and the webhook is skipped</li>\n</ul>\n</li>\n</ol>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.matchConditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.matchConditions.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:</p>\n<p>'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\nSee https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\nrequest resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/</p>\n<p>Required.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.matchConditions.<name>.expression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '<em>' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9</em>.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')</p>\n<p>Required.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.matchConditions.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchPolicy defines how the &quot;rules&quot; list is used to match incoming requests. Allowed values are &quot;Exact&quot; or &quot;Equivalent&quot;.</p>\n<ul>\n<li>\n<p>Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but &quot;rules&quot; only included <code>apiGroups:[&quot;apps&quot;], apiVersions:[&quot;v1&quot;], resources: [&quot;deployments&quot;]</code>, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.</p>\n</li>\n<li>\n<p>Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and &quot;rules&quot; only included <code>apiGroups:[&quot;apps&quot;], apiVersions:[&quot;v1&quot;], resources: [&quot;deployments&quot;]</code>, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.</p>\n</li>\n</ul>\n<p>Defaults to &quot;Equivalent&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.matchPolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where &quot;imagepolicy&quot; is the name of the webhook, and kubernetes.io is the name of the organization. Required.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.</p>\n<p>For example, to run the webhook on any objects whose namespace is not associated with &quot;runlevel&quot; of &quot;0&quot; or &quot;1&quot;;  you will set the selector as follows: &quot;namespaceSelector&quot;: {\n&quot;matchExpressions&quot;: [\n{\n&quot;key&quot;: &quot;runlevel&quot;,\n&quot;operator&quot;: &quot;NotIn&quot;,\n&quot;values&quot;: [\n&quot;0&quot;,\n&quot;1&quot;\n]\n}\n]\n}</p>\n<p>If instead you want to only run the webhook on any objects whose namespace is associated with the &quot;environment&quot; of &quot;prod&quot; or &quot;staging&quot;; you will set the selector as follows: &quot;namespaceSelector&quot;: {\n&quot;matchExpressions&quot;: [\n{\n&quot;key&quot;: &quot;environment&quot;,\n&quot;operator&quot;: &quot;In&quot;,\n&quot;values&quot;: [\n&quot;prod&quot;,\n&quot;staging&quot;\n]\n}\n]\n}</p>\n<p>See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels for more examples of label selectors.</p>\n<p>Default to the empty LabelSelector, which matches everything.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.namespaceSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.namespaceSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.objectSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.objectSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.objectSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.objectSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.objectSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.objectSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches <em>any</em> Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.rules"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIGroups is the API groups the resources belong to. '<em>' is all groups. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.rules.*.apiGroups"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersions is the API versions the resources belong to. '<em>' is all versions. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.rules.*.apiVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.rules.*.operations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Resources is a list of resources this rule applies to.</p>\n<p>For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '<em>' means all resources, but not subresources. 'pods/</em>' means all subresources of pods. '<em>/scale' means all scale subresources. '</em>/*' means all resources and their subresources.</p>\n<p>If wildcard is present, the validation rule will ensure resources do not overlap with each other.</p>\n<p>Depending on the enclosing object, subresources might not be allowed. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.rules.*.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>scope specifies the scope of this rule. Valid values are &quot;Cluster&quot;, &quot;Namespaced&quot;, and &quot;<em>&quot; &quot;Cluster&quot; means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. &quot;Namespaced&quot; means that only namespaced resources will match this rule. &quot;</em>&quot; means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is &quot;*&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.rules.*.scope"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.sideEffects"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1.ValidatingWebhookConfiguration.<name>.webhooks.<name>.timeoutSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>MutatingAdmissionPolicy describes the definition of an admission mutation policy that mutates the object coming into admission chain.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specification of the desired behavior of the MutatingAdmissionPolicy.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>failurePolicy defines how to handle failures for the admission policy. Failures can occur from CEL expression parse errors, type check errors, runtime errors and invalid or mis-configured policy definitions or bindings.</p>\n<p>A policy is invalid if paramKind refers to a non-existent Kind. A binding is invalid if paramRef.name refers to a non-existent resource.</p>\n<p>failurePolicy does not define how validations that evaluate to false are handled.</p>\n<p>Allowed values are Ignore or Fail. Defaults to Fail.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.failurePolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchConditions is a list of conditions that must be met for a request to be validated. Match conditions filter requests that have already been matched by the matchConstraints. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.</p>\n<p>If a parameter object is provided, it can be accessed via the <code>params</code> handle in the same manner as validation expressions.</p>\n<p>The exact matching logic is (in order):</p>\n<ol>\n<li>If ANY matchCondition evaluates to FALSE, the policy is skipped.</li>\n<li>If ALL matchConditions evaluate to TRUE, the policy is evaluated.</li>\n<li>If any matchCondition evaluates to an error (but none are FALSE):\n<ul>\n<li>If failurePolicy=Fail, reject the request</li>\n<li>If failurePolicy=Ignore, the policy is skipped</li>\n</ul>\n</li>\n</ol>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConditions.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:</p>\n<p>'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\nSee https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\nrequest resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/</p>\n<p>Required.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConditions.<name>.expression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '<em>' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9</em>.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')</p>\n<p>Required.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConditions.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchConstraints specifies what resources this policy is designed to validate. The MutatingAdmissionPolicy cares about a request if it matches <em>all</em> Constraints. However, in order to prevent clusters from being put into an unstable state that cannot be recovered from via the API MutatingAdmissionPolicy cannot match MutatingAdmissionPolicy and MutatingAdmissionPolicyBinding. The CREATE, UPDATE and CONNECT operations are allowed.  The DELETE operation may not be matched. '*' matches CREATE, UPDATE and CONNECT. Required.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ExcludeResourceRules describes what operations on what resources/subresources the policy should not care about. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIGroups is the API groups the resources belong to. '<em>' is all groups. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules.*.apiGroups"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersions is the API versions the resources belong to. '<em>' is all versions. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules.*.apiVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules.*.operations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules.*.resourceNames"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Resources is a list of resources this rule applies to.</p>\n<p>For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '<em>' means all resources, but not subresources. 'pods/</em>' means all subresources of pods. '<em>/scale' means all scale subresources. '</em>/*' means all resources and their subresources.</p>\n<p>If wildcard is present, the validation rule will ensure resources do not overlap with each other.</p>\n<p>Depending on the enclosing object, subresources might not be allowed. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules.*.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>scope specifies the scope of this rule. Valid values are &quot;Cluster&quot;, &quot;Namespaced&quot;, and &quot;<em>&quot; &quot;Cluster&quot; means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. &quot;Namespaced&quot; means that only namespaced resources will match this rule. &quot;</em>&quot; means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is &quot;*&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules.*.scope"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchPolicy defines how the &quot;MatchResources&quot; list is used to match incoming requests. Allowed values are &quot;Exact&quot; or &quot;Equivalent&quot;.</p>\n<ul>\n<li>\n<p>Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but &quot;rules&quot; only included <code>apiGroups:[&quot;apps&quot;], apiVersions:[&quot;v1&quot;], resources: [&quot;deployments&quot;]</code>, the admission policy does not consider requests to apps/v1beta1 or extensions/v1beta1 API groups.</p>\n</li>\n<li>\n<p>Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and &quot;rules&quot; only included <code>apiGroups:[&quot;apps&quot;], apiVersions:[&quot;v1&quot;], resources: [&quot;deployments&quot;]</code>, the admission policy <strong>does</strong> consider requests made to apps/v1beta1 or extensions/v1beta1 API groups. The API server translates the request to a matched resource API if necessary.</p>\n</li>\n</ul>\n<p>Defaults to &quot;Equivalent&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.matchPolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>NamespaceSelector decides whether to run the admission control policy on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the policy.</p>\n<p>For example, to run the webhook on any objects whose namespace is not associated with &quot;runlevel&quot; of &quot;0&quot; or &quot;1&quot;;  you will set the selector as follows: &quot;namespaceSelector&quot;: {\n&quot;matchExpressions&quot;: [\n{\n&quot;key&quot;: &quot;runlevel&quot;,\n&quot;operator&quot;: &quot;NotIn&quot;,\n&quot;values&quot;: [\n&quot;0&quot;,\n&quot;1&quot;\n]\n}\n]\n}</p>\n<p>If instead you want to only run the policy on any objects whose namespace is associated with the &quot;environment&quot; of &quot;prod&quot; or &quot;staging&quot;; you will set the selector as follows: &quot;namespaceSelector&quot;: {\n&quot;matchExpressions&quot;: [\n{\n&quot;key&quot;: &quot;environment&quot;,\n&quot;operator&quot;: &quot;In&quot;,\n&quot;values&quot;: [\n&quot;prod&quot;,\n&quot;staging&quot;\n]\n}\n]\n}</p>\n<p>See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.</p>\n<p>Default to the empty LabelSelector, which matches everything.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.namespaceSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.namespaceSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ObjectSelector decides whether to run the policy based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the policy's expression (CEL), and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.objectSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.objectSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.objectSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.objectSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.objectSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.objectSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceRules describes what operations on what resources/subresources the admission policy matches. The policy cares about an operation if it matches <em>any</em> Rule.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIGroups is the API groups the resources belong to. '<em>' is all groups. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules.*.apiGroups"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersions is the API versions the resources belong to. '<em>' is all versions. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules.*.apiVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules.*.operations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules.*.resourceNames"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Resources is a list of resources this rule applies to.</p>\n<p>For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '<em>' means all resources, but not subresources. 'pods/</em>' means all subresources of pods. '<em>/scale' means all scale subresources. '</em>/*' means all resources and their subresources.</p>\n<p>If wildcard is present, the validation rule will ensure resources do not overlap with each other.</p>\n<p>Depending on the enclosing object, subresources might not be allowed. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules.*.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>scope specifies the scope of this rule. Valid values are &quot;Cluster&quot;, &quot;Namespaced&quot;, and &quot;<em>&quot; &quot;Cluster&quot; means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. &quot;Namespaced&quot; means that only namespaced resources will match this rule. &quot;</em>&quot; means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is &quot;*&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules.*.scope"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>mutations contain operations to perform on matching objects. mutations may not be empty; a minimum of one mutation is required. mutations are evaluated in order, and are reinvoked according to the reinvocationPolicy. The mutations of a policy are invoked for each binding of this policy and reinvocation of mutations occurs on a per binding basis.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.mutations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>applyConfiguration defines the desired configuration values of an object. The configuration is applied to the admission object using <a href=\"https://github.com/kubernetes-sigs/structured-merge-diff\">structured merge diff</a>. A CEL expression is used to create apply configuration.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.mutations.*.applyConfiguration"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>expression will be evaluated by CEL to create an apply configuration. ref: https://github.com/google/cel-spec</p>\n<p>Apply configurations are declared in CEL using object initialization. For example, this CEL expression returns an apply configuration to set a single field:</p>\n<pre><code>Object{\n  spec: Object.spec{\n    serviceAccountName: &quot;example&quot;\n  }\n}\n</code></pre>\n<p>Apply configurations may not modify atomic structs, maps or arrays due to the risk of accidental deletion of values not included in the apply configuration.</p>\n<p>CEL expressions have access to the object types needed to create apply configurations:</p>\n<ul>\n<li>'Object' - CEL type of the resource object. - 'Object.&lt;fieldName&gt;' - CEL type of object field (such as 'Object.spec') - 'Object.&lt;fieldName1&gt;.&lt;fieldName2&gt;...&lt;fieldNameN&gt;` - CEL type of nested field (such as 'Object.spec.containers')</li>\n</ul>\n<p>CEL expressions have access to the contents of the API request, organized into CEL variables as well as some other useful variables:</p>\n<ul>\n<li>'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request(<a href=\"/pkg/apis/admission/types.go#AdmissionRequest\">ref</a>). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value.\nFor example, a variable named 'foo' can be accessed as 'variables.foo'.</li>\n<li>'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\nSee https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz</li>\n<li>'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\nrequest resource.</li>\n</ul>\n<p>The <code>apiVersion</code>, <code>kind</code>, <code>metadata.name</code> and <code>metadata.generateName</code> are always accessible from the root of the object. No other metadata properties are accessible.</p>\n<p>Only property names of the form <code>[a-zA-Z_.-/][a-zA-Z0-9_.-/]*</code> are accessible. Required.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.mutations.*.applyConfiguration.expression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>jsonPatch defines a <a href=\"https://jsonpatch.com/\">JSON patch</a> operation to perform a mutation to the object. A CEL expression is used to create the JSON patch.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.mutations.*.jsonPatch"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>expression will be evaluated by CEL to create a <a href=\"https://jsonpatch.com/\">JSON patch</a>. ref: https://github.com/google/cel-spec</p>\n<p>expression must return an array of JSONPatch values.</p>\n<p>For example, this CEL expression returns a JSON patch to conditionally modify a value:</p>\n<pre><code>  [\n    JSONPatch{op: &quot;test&quot;, path: &quot;/spec/example&quot;, value: &quot;Red&quot;},\n    JSONPatch{op: &quot;replace&quot;, path: &quot;/spec/example&quot;, value: &quot;Green&quot;}\n  ]\n</code></pre>\n<p>To define an object for the patch value, use Object types. For example:</p>\n<pre><code>  [\n    JSONPatch{\n      op: &quot;add&quot;,\n      path: &quot;/spec/selector&quot;,\n      value: Object.spec.selector{matchLabels: {&quot;environment&quot;: &quot;test&quot;}}\n    }\n  ]\n</code></pre>\n<p>To use strings containing '/' and '~' as JSONPatch path keys, use &quot;jsonpatch.escapeKey&quot;. For example:</p>\n<pre><code>  [\n    JSONPatch{\n      op: &quot;add&quot;,\n      path: &quot;/metadata/labels/&quot; + jsonpatch.escapeKey(&quot;example.com/environment&quot;),\n      value: &quot;test&quot;\n    },\n  ]\n</code></pre>\n<p>CEL expressions have access to the types needed to create JSON patches and objects:</p>\n<ul>\n<li>'JSONPatch' - CEL type of JSON Patch operations. JSONPatch has the fields 'op', 'from', 'path' and 'value'.\nSee <a href=\"https://jsonpatch.com/\">JSON patch</a> for more details. The 'value' field may be set to any of: string,\ninteger, array, map or object.  If set, the 'path' and 'from' fields must be set to a\n<a href=\"https://datatracker.ietf.org/doc/html/rfc6901/\">JSON pointer</a> string, where the 'jsonpatch.escapeKey()' CEL\nfunction may be used to escape path keys containing '/' and '~'.</li>\n<li>'Object' - CEL type of the resource object. - 'Object.&lt;fieldName&gt;' - CEL type of object field (such as 'Object.spec') - 'Object.&lt;fieldName1&gt;.&lt;fieldName2&gt;...&lt;fieldNameN&gt;` - CEL type of nested field (such as 'Object.spec.containers')</li>\n</ul>\n<p>CEL expressions have access to the contents of the API request, organized into CEL variables as well as some other useful variables:</p>\n<ul>\n<li>'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request(<a href=\"/pkg/apis/admission/types.go#AdmissionRequest\">ref</a>). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value.\nFor example, a variable named 'foo' can be accessed as 'variables.foo'.</li>\n<li>'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\nSee https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz</li>\n<li>'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\nrequest resource.</li>\n</ul>\n<p>CEL expressions have access to <a href=\"https://kubernetes.io/docs/reference/using-api/cel/#cel-options-language-features-and-libraries\">Kubernetes CEL function libraries</a> as well as:</p>\n<ul>\n<li>'jsonpatch.escapeKey' - Performs JSONPatch key escaping. '~' and  '/' are escaped as '~0' and `~1' respectively).</li>\n</ul>\n<p>Only property names of the form <code>[a-zA-Z_.-/][a-zA-Z0-9_.-/]*</code> are accessible. Required.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.mutations.*.jsonPatch.expression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>patchType indicates the patch strategy used. Allowed values are &quot;ApplyConfiguration&quot; and &quot;JSONPatch&quot;. Required.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.mutations.*.patchType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>paramKind specifies the kind of resources used to parameterize this policy. If absent, there are no parameters for this policy and the param CEL variable will not be provided to validation expressions. If paramKind refers to a non-existent kind, this policy definition is mis-configured and the FailurePolicy is applied. If paramKind is specified but paramRef is unset in MutatingAdmissionPolicyBinding, the params variable will be null.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.paramKind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion is the API group version the resources belong to. In format of &quot;group/version&quot;. Required.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.paramKind.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is the API kind the resources belong to. Required.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.paramKind.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>reinvocationPolicy indicates whether mutations may be called multiple times per MutatingAdmissionPolicyBinding as part of a single admission evaluation. Allowed values are &quot;Never&quot; and &quot;IfNeeded&quot;.</p>\n<p>Never: These mutations will not be called more than once per binding in a single admission evaluation.</p>\n<p>IfNeeded: These mutations may be invoked more than once per binding for a single admission request and there is no guarantee of order with respect to other admission plugins, admission webhooks, bindings of this policy and admission policies.  Mutations are only reinvoked when mutations change the object after this mutation is invoked. Required.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.reinvocationPolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under <code>variables</code> in other expressions of the policy except matchConditions because matchConditions are evaluated before the rest of the policy.</p>\n<p>The expression of a variable can refer to other variables defined earlier in the list but not those after. Thus, variables must be sorted by the order of first appearance and acyclic.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.variables"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.variables.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.variables.<name>.expression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through <code>variables</code> For example, if name is &quot;foo&quot;, the variable will be available as <code>variables.foo</code></p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicy.<name>.spec.variables.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>MutatingAdmissionPolicyBinding binds the MutatingAdmissionPolicy with parametrized resources. MutatingAdmissionPolicyBinding and the optional parameter resource together define how cluster administrators configure policies for clusters.</p>\n<p>For a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding. Each evaluation is constrained by a <a href=\"https://kubernetes.io/docs/reference/using-api/cel/#runtime-cost-budget\">runtime cost budget</a>.</p>\n<p>Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.ownerReferences.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specification of the desired behavior of the MutatingAdmissionPolicyBinding.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchResources limits what resources match this binding and may be mutated by it. Note that if matchResources matches a resource, the resource must also match a policy's matchConstraints and matchConditions before the resource may be mutated. When matchResources is unset, it does not constrain resource matching, and only the policy's matchConstraints and matchConditions must match for the resource to be mutated. Additionally, matchResources.resourceRules are optional and do not constraint matching when unset. Note that this is differs from MutatingAdmissionPolicy matchConstraints, where resourceRules are required. The CREATE, UPDATE and CONNECT operations are allowed.  The DELETE operation may not be matched. '*' matches CREATE, UPDATE and CONNECT.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ExcludeResourceRules describes what operations on what resources/subresources the policy should not care about. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.excludeResourceRules"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIGroups is the API groups the resources belong to. '<em>' is all groups. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.excludeResourceRules.*.apiGroups"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersions is the API versions the resources belong to. '<em>' is all versions. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.excludeResourceRules.*.apiVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.excludeResourceRules.*.operations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.excludeResourceRules.*.resourceNames"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Resources is a list of resources this rule applies to.</p>\n<p>For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '<em>' means all resources, but not subresources. 'pods/</em>' means all subresources of pods. '<em>/scale' means all scale subresources. '</em>/*' means all resources and their subresources.</p>\n<p>If wildcard is present, the validation rule will ensure resources do not overlap with each other.</p>\n<p>Depending on the enclosing object, subresources might not be allowed. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.excludeResourceRules.*.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>scope specifies the scope of this rule. Valid values are &quot;Cluster&quot;, &quot;Namespaced&quot;, and &quot;<em>&quot; &quot;Cluster&quot; means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. &quot;Namespaced&quot; means that only namespaced resources will match this rule. &quot;</em>&quot; means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is &quot;*&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.excludeResourceRules.*.scope"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchPolicy defines how the &quot;MatchResources&quot; list is used to match incoming requests. Allowed values are &quot;Exact&quot; or &quot;Equivalent&quot;.</p>\n<ul>\n<li>\n<p>Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but &quot;rules&quot; only included <code>apiGroups:[&quot;apps&quot;], apiVersions:[&quot;v1&quot;], resources: [&quot;deployments&quot;]</code>, the admission policy does not consider requests to apps/v1beta1 or extensions/v1beta1 API groups.</p>\n</li>\n<li>\n<p>Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and &quot;rules&quot; only included <code>apiGroups:[&quot;apps&quot;], apiVersions:[&quot;v1&quot;], resources: [&quot;deployments&quot;]</code>, the admission policy <strong>does</strong> consider requests made to apps/v1beta1 or extensions/v1beta1 API groups. The API server translates the request to a matched resource API if necessary.</p>\n</li>\n</ul>\n<p>Defaults to &quot;Equivalent&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.matchPolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>NamespaceSelector decides whether to run the admission control policy on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the policy.</p>\n<p>For example, to run the webhook on any objects whose namespace is not associated with &quot;runlevel&quot; of &quot;0&quot; or &quot;1&quot;;  you will set the selector as follows: &quot;namespaceSelector&quot;: {\n&quot;matchExpressions&quot;: [\n{\n&quot;key&quot;: &quot;runlevel&quot;,\n&quot;operator&quot;: &quot;NotIn&quot;,\n&quot;values&quot;: [\n&quot;0&quot;,\n&quot;1&quot;\n]\n}\n]\n}</p>\n<p>If instead you want to only run the policy on any objects whose namespace is associated with the &quot;environment&quot; of &quot;prod&quot; or &quot;staging&quot;; you will set the selector as follows: &quot;namespaceSelector&quot;: {\n&quot;matchExpressions&quot;: [\n{\n&quot;key&quot;: &quot;environment&quot;,\n&quot;operator&quot;: &quot;In&quot;,\n&quot;values&quot;: [\n&quot;prod&quot;,\n&quot;staging&quot;\n]\n}\n]\n}</p>\n<p>See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.</p>\n<p>Default to the empty LabelSelector, which matches everything.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.namespaceSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.namespaceSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ObjectSelector decides whether to run the policy based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the policy's expression (CEL), and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.objectSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.objectSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.objectSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.objectSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.objectSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.objectSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceRules describes what operations on what resources/subresources the admission policy matches. The policy cares about an operation if it matches <em>any</em> Rule.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.resourceRules"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIGroups is the API groups the resources belong to. '<em>' is all groups. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.resourceRules.*.apiGroups"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersions is the API versions the resources belong to. '<em>' is all versions. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.resourceRules.*.apiVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.resourceRules.*.operations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.resourceRules.*.resourceNames"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Resources is a list of resources this rule applies to.</p>\n<p>For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '<em>' means all resources, but not subresources. 'pods/</em>' means all subresources of pods. '<em>/scale' means all scale subresources. '</em>/*' means all resources and their subresources.</p>\n<p>If wildcard is present, the validation rule will ensure resources do not overlap with each other.</p>\n<p>Depending on the enclosing object, subresources might not be allowed. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.resourceRules.*.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>scope specifies the scope of this rule. Valid values are &quot;Cluster&quot;, &quot;Namespaced&quot;, and &quot;<em>&quot; &quot;Cluster&quot; means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. &quot;Namespaced&quot; means that only namespaced resources will match this rule. &quot;</em>&quot; means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is &quot;*&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.matchResources.resourceRules.*.scope"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>paramRef specifies the parameter resource used to configure the admission control policy. It should point to a resource of the type specified in spec.ParamKind of the bound MutatingAdmissionPolicy. If the policy specifies a ParamKind and the resource referred to by ParamRef does not exist, this binding is considered mis-configured and the FailurePolicy of the MutatingAdmissionPolicy applied. If the policy does not specify a ParamKind then this field is ignored, and the rules are evaluated without a param.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.paramRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p><code>name</code> is the name of the resource being referenced.</p>\n<p><code>name</code> and <code>selector</code> are mutually exclusive properties. If one is set, the other must be unset.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.paramRef.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both <code>name</code> and <code>selector</code> fields.</p>\n<p>A per-namespace parameter may be used by specifying a namespace-scoped <code>paramKind</code> in the policy and leaving this field empty.</p>\n<ul>\n<li>\n<p>If <code>paramKind</code> is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error.</p>\n</li>\n<li>\n<p>If <code>paramKind</code> is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error.</p>\n</li>\n</ul>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.paramRef.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p><code>parameterNotFoundAction</code> controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to <code>Allow</code>, then no matched parameters will be treated as successful validation by the binding. If set to <code>Deny</code>, then no matched parameters will be subject to the <code>failurePolicy</code> of the policy.</p>\n<p>Allowed values are <code>Allow</code> or <code>Deny</code> Default to <code>Deny</code></p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.paramRef.parameterNotFoundAction"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind.</p>\n<p>If multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together.</p>\n<p>One of <code>name</code> or <code>selector</code> must be set, but <code>name</code> and <code>selector</code> are mutually exclusive properties. If one is set, the other must be unset.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.paramRef.selector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.paramRef.selector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.paramRef.selector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.paramRef.selector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.paramRef.selector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.paramRef.selector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>policyName references a MutatingAdmissionPolicy name which the MutatingAdmissionPolicyBinding binds to. If the referenced resource does not exist, this binding is considered invalid and will be ignored Required.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1alpha1.MutatingAdmissionPolicyBinding.<name>.spec.policyName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>ValidatingAdmissionPolicy describes the definition of an admission validation policy that accepts or rejects an object without changing it.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.creationTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.deletionGracePeriodSeconds"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.</p>\n<p>Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.deletionTimestamp"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.finalizers"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.</p>\n<p>If this field is specified and the generated name exists, the server will return a 409.</p>\n<p>Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.generateName"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.generation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.labels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like &quot;ci-cd&quot;. The set of fields is always in the version that the workflow used when modifying the object.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.managedFields"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the version of this resource that this field set applies to. The format is &quot;group/version&quot; just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.managedFields.*.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: &quot;FieldsV1&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.managedFields.*.fieldsType"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>FieldsV1 holds the first JSON version format as described in the &quot;FieldsV1&quot; type.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.managedFields.*.fieldsV1"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Manager is an identifier of the workflow managing these fields.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.managedFields.*.manager"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.managedFields.*.operation"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.managedFields.*.subresource"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.managedFields.*.time"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the &quot;default&quot; namespace, but &quot;default&quot; is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.</p>\n<p>Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.namespace"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.ownerReferences"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>API version of the referent.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs &quot;delete&quot; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>.blockOwnerDeletion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>If true, this reference points to the managing controller.</p>","example":null,"read_only":false,"type":"null or boolean","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>.controller"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.ownerReferences.<name>.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.</p>\n<p>Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.resourceVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.selfLink"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.</p>\n<p>Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.metadata.uid"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Specification of the desired behavior of the ValidatingAdmissionPolicy.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>auditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request. validations and auditAnnotations may not both be empty; a least one of validations or auditAnnotations is required.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.auditAnnotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.</p>\n<p>The key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: &quot;{ValidatingAdmissionPolicy name}/{key}&quot;.</p>\n<p>If an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded.</p>\n<p>Required.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.auditAnnotations.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb.</p>\n<p>If multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list.</p>\n<p>Required.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.auditAnnotations.*.valueExpression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>failurePolicy defines how to handle failures for the admission policy. Failures can occur from CEL expression parse errors, type check errors, runtime errors and invalid or mis-configured policy definitions or bindings.</p>\n<p>A policy is invalid if spec.paramKind refers to a non-existent Kind. A binding is invalid if spec.paramRef.name refers to a non-existent resource.</p>\n<p>failurePolicy does not define how validations that evaluate to false are handled.</p>\n<p>When failurePolicy is set to Fail, ValidatingAdmissionPolicyBinding validationActions define how failures are enforced.</p>\n<p>Allowed values are Ignore or Fail. Defaults to Fail.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.failurePolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MatchConditions is a list of conditions that must be met for a request to be validated. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.</p>\n<p>If a parameter object is provided, it can be accessed via the <code>params</code> handle in the same manner as validation expressions.</p>\n<p>The exact matching logic is (in order):</p>\n<ol>\n<li>If ANY matchCondition evaluates to FALSE, the policy is skipped.</li>\n<li>If ALL matchConditions evaluate to TRUE, the policy is evaluated.</li>\n<li>If any matchCondition evaluates to an error (but none are FALSE):\n<ul>\n<li>If failurePolicy=Fail, reject the request</li>\n<li>If failurePolicy=Ignore, the policy is skipped</li>\n</ul>\n</li>\n</ol>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConditions.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:</p>\n<p>'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\nSee https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\nrequest resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/</p>\n<p>Required.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConditions.<name>.expression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '<em>' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9</em>.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')</p>\n<p>Required.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConditions.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>MatchConstraints specifies what resources this policy is designed to validate. The AdmissionPolicy cares about a request if it matches <em>all</em> Constraints. However, in order to prevent clusters from being put into an unstable state that cannot be recovered from via the API ValidatingAdmissionPolicy cannot match ValidatingAdmissionPolicy and ValidatingAdmissionPolicyBinding. Required.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ExcludeResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy should not care about. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIGroups is the API groups the resources belong to. '<em>' is all groups. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules.*.apiGroups"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersions is the API versions the resources belong to. '<em>' is all versions. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules.*.apiVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules.*.operations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules.*.resourceNames"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Resources is a list of resources this rule applies to.</p>\n<p>For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '<em>' means all resources, but not subresources. 'pods/</em>' means all subresources of pods. '<em>/scale' means all scale subresources. '</em>/*' means all resources and their subresources.</p>\n<p>If wildcard is present, the validation rule will ensure resources do not overlap with each other.</p>\n<p>Depending on the enclosing object, subresources might not be allowed. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules.*.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>scope specifies the scope of this rule. Valid values are &quot;Cluster&quot;, &quot;Namespaced&quot;, and &quot;<em>&quot; &quot;Cluster&quot; means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. &quot;Namespaced&quot; means that only namespaced resources will match this rule. &quot;</em>&quot; means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is &quot;*&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.excludeResourceRules.*.scope"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchPolicy defines how the &quot;MatchResources&quot; list is used to match incoming requests. Allowed values are &quot;Exact&quot; or &quot;Equivalent&quot;.</p>\n<ul>\n<li>\n<p>Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but &quot;rules&quot; only included <code>apiGroups:[&quot;apps&quot;], apiVersions:[&quot;v1&quot;], resources: [&quot;deployments&quot;]</code>, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the ValidatingAdmissionPolicy.</p>\n</li>\n<li>\n<p>Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and &quot;rules&quot; only included <code>apiGroups:[&quot;apps&quot;], apiVersions:[&quot;v1&quot;], resources: [&quot;deployments&quot;]</code>, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the ValidatingAdmissionPolicy.</p>\n</li>\n</ul>\n<p>Defaults to &quot;Equivalent&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.matchPolicy"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>NamespaceSelector decides whether to run the admission control policy on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the policy.</p>\n<p>For example, to run the webhook on any objects whose namespace is not associated with &quot;runlevel&quot; of &quot;0&quot; or &quot;1&quot;;  you will set the selector as follows: &quot;namespaceSelector&quot;: {\n&quot;matchExpressions&quot;: [\n{\n&quot;key&quot;: &quot;runlevel&quot;,\n&quot;operator&quot;: &quot;NotIn&quot;,\n&quot;values&quot;: [\n&quot;0&quot;,\n&quot;1&quot;\n]\n}\n]\n}</p>\n<p>If instead you want to only run the policy on any objects whose namespace is associated with the &quot;environment&quot; of &quot;prod&quot; or &quot;staging&quot;; you will set the selector as follows: &quot;namespaceSelector&quot;: {\n&quot;matchExpressions&quot;: [\n{\n&quot;key&quot;: &quot;environment&quot;,\n&quot;operator&quot;: &quot;In&quot;,\n&quot;values&quot;: [\n&quot;prod&quot;,\n&quot;staging&quot;\n]\n}\n]\n}</p>\n<p>See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.</p>\n<p>Default to the empty LabelSelector, which matches everything.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.namespaceSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.namespaceSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.namespaceSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.namespaceSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.namespaceSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.namespaceSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ObjectSelector decides whether to run the validation based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the cel validation, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.objectSelector"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchExpressions is a list of label selector requirements. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.objectSelector.matchExpressions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>key is the label key that the selector applies to.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.objectSelector.matchExpressions.*.key"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.objectSelector.matchExpressions.*.operator"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.objectSelector.matchExpressions.*.values"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is &quot;key&quot;, the operator is &quot;In&quot;, and the values array contains only &quot;value&quot;. The requirements are ANDed.</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.objectSelector.matchLabels"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy matches. The policy cares about an operation if it matches <em>any</em> Rule.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIGroups is the API groups the resources belong to. '<em>' is all groups. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules.*.apiGroups"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersions is the API versions the resources belong to. '<em>' is all versions. If '</em>' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules.*.apiVersions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules.*.operations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules.*.resourceNames"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Resources is a list of resources this rule applies to.</p>\n<p>For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '<em>' means all resources, but not subresources. 'pods/</em>' means all subresources of pods. '<em>/scale' means all scale subresources. '</em>/*' means all resources and their subresources.</p>\n<p>If wildcard is present, the validation rule will ensure resources do not overlap with each other.</p>\n<p>Depending on the enclosing object, subresources might not be allowed. Required.</p>","example":null,"read_only":false,"type":"null or (list of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules.*.resources"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>scope specifies the scope of this rule. Valid values are &quot;Cluster&quot;, &quot;Namespaced&quot;, and &quot;<em>&quot; &quot;Cluster&quot; means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. &quot;Namespaced&quot; means that only namespaced resources will match this rule. &quot;</em>&quot; means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is &quot;*&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.matchConstraints.resourceRules.*.scope"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>ParamKind specifies the kind of resources used to parameterize this policy. If absent, there are no parameters for this policy and the param CEL variable will not be provided to validation expressions. If ParamKind refers to a non-existent kind, this policy definition is mis-configured and the FailurePolicy is applied. If paramKind is specified but paramRef is unset in ValidatingAdmissionPolicyBinding, the params variable will be null.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.paramKind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion is the API group version the resources belong to. In format of &quot;group/version&quot;. Required.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.paramKind.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is the API kind the resources belong to. Required.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.paramKind.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Validations contain CEL expressions which is used to apply the validation. Validations and AuditAnnotations may not both be empty; a minimum of one Validations or AuditAnnotations is required.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.validations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables:</p>\n<ul>\n<li>'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request(<a href=\"/pkg/apis/admission/types.go#AdmissionRequest\">ref</a>). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value.\nFor example, a variable named 'foo' can be accessed as 'variables.foo'.</li>\n<li>'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\nSee https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz</li>\n<li>'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\nrequest resource.</li>\n</ul>\n<p>The <code>apiVersion</code>, <code>kind</code>, <code>metadata.name</code> and <code>metadata.generateName</code> are always accessible from the root of the object. No other metadata properties are accessible.</p>\n<p>Only property names of the form <code>[a-zA-Z_.-/][a-zA-Z0-9_.-/]*</code> are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '<strong>' escapes to '<strong>underscores</strong>' - '.' escapes to '<strong>dot</strong>' - '-' escapes to '<strong>dash</strong>' - '/' escapes to '<strong>slash</strong>' - Property names that exactly match a CEL RESERVED keyword escape to '</strong>{keyword}__'. The keywords are:\n&quot;true&quot;, &quot;false&quot;, &quot;null&quot;, &quot;in&quot;, &quot;as&quot;, &quot;break&quot;, &quot;const&quot;, &quot;continue&quot;, &quot;else&quot;, &quot;for&quot;, &quot;function&quot;, &quot;if&quot;,\n&quot;import&quot;, &quot;let&quot;, &quot;loop&quot;, &quot;package&quot;, &quot;namespace&quot;, &quot;return&quot;.\nExamples:</p>\n<ul>\n<li>Expression accessing a property named &quot;namespace&quot;: {&quot;Expression&quot;: &quot;object.<strong>namespace</strong> &gt; 0&quot;}</li>\n<li>Expression accessing a property named &quot;x-prop&quot;: {&quot;Expression&quot;: &quot;object.x__dash__prop &gt; 0&quot;}</li>\n<li>Expression accessing a property named &quot;redact__d&quot;: {&quot;Expression&quot;: &quot;object.redact__underscores__d &gt; 0&quot;}</li>\n</ul>\n<p>Equality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:</p>\n<ul>\n<li>'set': <code>X + Y</code> performs a union where the array positions of all elements in <code>X</code> are preserved and\nnon-intersecting elements in <code>Y</code> are appended, retaining their partial order.</li>\n<li>'map': <code>X + Y</code> performs a merge where the array positions of all keys in <code>X</code> are preserved but the values\nare overwritten by values in <code>Y</code> when the key sets of <code>X</code> and <code>Y</code> intersect. Elements in <code>Y</code> with\nnon-intersecting keys are appended, retaining their partial order.\nRequired.</li>\n</ul>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.validations.*.expression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is &quot;failed rule: {Rule}&quot;. e.g. &quot;must be a URL with the host matching spec.host&quot; If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is &quot;failed Expression: {Expression}&quot;.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.validations.*.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the <code>expression</code> except for 'authorizer' and 'authorizer.requestResource'. Example: &quot;object.x must be less than max (&quot;+string(params.max)+&quot;)&quot;</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.validations.*.messageExpression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: &quot;Unauthorized&quot;, &quot;Forbidden&quot;, &quot;Invalid&quot;, &quot;RequestEntityTooLarge&quot;. If not set, StatusReasonInvalid is used in the response to the client.</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.validations.*.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under <code>variables</code> in other expressions of the policy except MatchConditions because MatchConditions are evaluated before the rest of the policy.</p>\n<p>The expression of a variable can refer to other variables defined earlier in the list but not those after. Thus, Variables must be sorted by the order of first appearance and acyclic.</p>","example":null,"read_only":false,"type":"null or (attribute set of (submodule) or list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.variables"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"variable\">null</span>\n","description":"","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.variables.<name>._priority"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.variables.<name>.expression"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through <code>variables</code> For example, if name is &quot;foo&quot;, the variable will be available as <code>variables.foo</code></p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.spec.variables.<name>.name"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The status of the ValidatingAdmissionPolicy, including warnings that are useful to determine if the policy behaves in the expected way. Populated by the system. Read-only.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The conditions represent the latest available observations of a policy's current state.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status.conditions"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status.conditions.*.lastTransitionTime"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>message is a human readable message indicating details about the transition. This may be an empty string.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status.conditions.*.message"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status.conditions.*.observedGeneration"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status.conditions.*.reason"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>status of the condition, one of True, False, Unknown.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status.conditions.*.status"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>type of condition in CamelCase or in foo.example.com/CamelCase.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status.conditions.*.type"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The generation observed by the controller.</p>","example":null,"read_only":false,"type":"null or signed integer","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status.observedGeneration"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The results of type checking for each expression. Presence of this field indicates the completion of the type checking.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status.typeChecking"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The type checking warnings for each expression.</p>","example":null,"read_only":false,"type":"null or (list of (submodule))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status.typeChecking.expressionWarnings"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The path to the field that refers the expression. For example, the reference to the expression of the first item of validations is &quot;spec.validations[0].expression&quot;</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status.typeChecking.expressionWarnings.*.fieldRef"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>The content of type checking information in a human-readable form. Each line of the warning contains the type that the expression is checked against, followed by the type check error from the compiler.</p>","example":null,"read_only":false,"type":"string","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicy.<name>.status.typeChecking.expressionWarnings.*.warning"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":"<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n","description":"<p>ValidatingAdmissionPolicyBinding binds the ValidatingAdmissionPolicy with paramerized resources. ValidatingAdmissionPolicyBinding and parameter CRDs together define how cluster administrators configure policies for clusters.</p>\n<p>For a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding.</p>\n<p>The CEL expressions of a policy must have a computed CEL cost below the maximum CEL budget. Each evaluation of the policy is given an independent CEL cost budget. Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.</p>","example":null,"read_only":false,"type":"attribute set of (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicyBinding"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicyBinding.<name>.apiVersion"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicyBinding.<name>.kind"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.</p>","example":null,"read_only":false,"type":"null or (submodule)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicyBinding.<name>.metadata"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations</p>","example":null,"read_only":false,"type":"null or (attribute set of (string))","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicyBinding.<name>.metadata.annotations"},{"declarations":["https://github.com/arnarg/nixidy/blob/main/modules/generated/k8s/v1.33.nix"],"default":null,"description":"<p>CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.</p>\n<p>Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</p>","example":null,"read_only":false,"type":"null or (string)","name":"applications.<name>.resources.\"admissionregistration.k8s.io\".v1beta1.ValidatingAdmissionPolicyBinding.<name>.metadata.creationTimestamp"}]